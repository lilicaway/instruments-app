// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Search startDate > endDate shows error message 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Search
    endDate={2013-12-31T23:00:00.000Z}
    instruments={Array []}
    maxValue={9000}
    minValue={0}
    startDate={2017-12-31T23:00:00.000Z}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "children": Array [
        <Row
          bsClass="row"
          componentClass="div"
        >
          <Connect(LoadingIndicator) />
        </Row>,
        <Row
          bsClass="row"
          componentClass="div"
        >
          <Col
            bsClass="col"
            componentClass="div"
            md={6}
            xs={12}
          >
            <Row
              bsClass="row"
              componentClass="div"
            >
              <Col
                bsClass="col"
                componentClass="div"
                md={3}
                xs={12}
              >
                <ControlLabel
                  bsClass="control-label"
                  srOnly={false}
                >
                  Start Date
                </ControlLabel>
              </Col>
              <Col
                bsClass="col"
                componentClass="div"
                md={9}
                xs={12}
              >
                <DatePicker
                  calendarIcon={
                    <svg
                      height="19"
                      viewBox="0 0 19 19"
                      width="19"
                      xmlns="http://www.w3.org/2000/svg"
                    >
                      <g
                        stroke="black"
                        strokeWidth="2"
                      >
                        <rect
                          fill="none"
                          height="15"
                          width="15"
                          x="2"
                          y="2"
                        />
                        <line
                          x1="6"
                          x2="6"
                          y1="0"
                          y2="4"
                        />
                        <line
                          x1="13"
                          x2="13"
                          y1="0"
                          y2="4"
                        />
                      </g>
                    </svg>
                  }
                  clearIcon={
                    <svg
                      height="19"
                      viewBox="0 0 19 19"
                      width="19"
                      xmlns="http://www.w3.org/2000/svg"
                    >
                      <g
                        stroke="black"
                        strokeWidth="2"
                      >
                        <line
                          x1="4"
                          x2="15"
                          y1="4"
                          y2="15"
                        />
                        <line
                          x1="15"
                          x2="4"
                          y1="4"
                          y2="15"
                        />
                      </g>
                    </svg>
                  }
                  isOpen={null}
                  onChange={[Function]}
                  returnValue="start"
                  value={2017-12-31T23:00:00.000Z}
                />
              </Col>
            </Row>
          </Col>
          <Col
            bsClass="col"
            componentClass="div"
            md={6}
            xs={12}
          >
            <Row
              bsClass="row"
              componentClass="div"
            >
              <Col
                bsClass="col"
                componentClass="div"
                md={3}
                xs={12}
              >
                <ControlLabel
                  bsClass="control-label"
                  srOnly={false}
                >
                  End Date
                </ControlLabel>
              </Col>
              <Col
                bsClass="col"
                componentClass="div"
                md={9}
                xs={12}
              >
                <DatePicker
                  calendarIcon={
                    <svg
                      height="19"
                      viewBox="0 0 19 19"
                      width="19"
                      xmlns="http://www.w3.org/2000/svg"
                    >
                      <g
                        stroke="black"
                        strokeWidth="2"
                      >
                        <rect
                          fill="none"
                          height="15"
                          width="15"
                          x="2"
                          y="2"
                        />
                        <line
                          x1="6"
                          x2="6"
                          y1="0"
                          y2="4"
                        />
                        <line
                          x1="13"
                          x2="13"
                          y1="0"
                          y2="4"
                        />
                      </g>
                    </svg>
                  }
                  clearIcon={
                    <svg
                      height="19"
                      viewBox="0 0 19 19"
                      width="19"
                      xmlns="http://www.w3.org/2000/svg"
                    >
                      <g
                        stroke="black"
                        strokeWidth="2"
                      >
                        <line
                          x1="4"
                          x2="15"
                          y1="4"
                          y2="15"
                        />
                        <line
                          x1="15"
                          x2="4"
                          y1="4"
                          y2="15"
                        />
                      </g>
                    </svg>
                  }
                  isOpen={null}
                  onChange={[Function]}
                  returnValue="start"
                  value={2013-12-31T23:00:00.000Z}
                />
              </Col>
            </Row>
          </Col>
        </Row>,
        <Row
          bsClass="row"
          componentClass="div"
        >
          <Col
            bsClass="col"
            componentClass="div"
            md={12}
            xs={12}
          >
            <Validator
              errorMessage="Start Date should be before or equal to End Date. Please check"
              max={2013-12-31T23:00:00.000Z}
              min={2017-12-31T23:00:00.000Z}
            />
          </Col>
        </Row>,
        <Row
          bsClass="row"
          componentClass="div"
        >
          <Col
            bsClass="col"
            componentClass="div"
            md={6}
            xs={12}
          >
            <Row
              bsClass="row"
              componentClass="div"
            >
              <Col
                bsClass="col"
                componentClass="div"
                md={3}
                xs={12}
              >
                <ControlLabel
                  bsClass="control-label"
                  srOnly={false}
                >
                  Set Minimun
                </ControlLabel>
              </Col>
              <Col
                bsClass="col"
                componentClass="div"
                md={9}
                xs={12}
              >
                <FormControlWithDelay
                  onChange={[Function]}
                  placeholder="Enter min"
                  value={0}
                />
              </Col>
            </Row>
          </Col>
          <Col
            bsClass="col"
            componentClass="div"
            md={6}
            xs={12}
          >
            <Row
              bsClass="row"
              componentClass="div"
            >
              <Col
                bsClass="col"
                componentClass="div"
                md={3}
                xs={12}
              >
                <ControlLabel
                  bsClass="control-label"
                  srOnly={false}
                >
                  Set Maximun
                </ControlLabel>
              </Col>
              <Col
                bsClass="col"
                componentClass="div"
                md={9}
                xs={12}
              >
                <FormControlWithDelay
                  onChange={[Function]}
                  placeholder="Enter max"
                  value={9000}
                />
              </Col>
            </Row>
          </Col>
          <Col
            bsClass="col"
            componentClass="div"
            md={12}
            xs={12}
          >
            <Validator
              errorMessage="Minimum value should be less than or equals to Maximum value. Please check"
              max={9000}
              min={0}
            />
          </Col>
        </Row>,
        <Row
          bsClass="row"
          componentClass="div"
        >
          <Col
            bsClass="col"
            componentClass="div"
            md={12}
            xs={12}
          >
            <InstrumentSelection
              instruments={Array []}
              onChange={[Function]}
            />
          </Col>
        </Row>,
      ],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "bsClass": "row",
          "children": <Connect(LoadingIndicator) />,
          "componentClass": "div",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {},
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "bsClass": "row",
          "children": Array [
            <Col
              bsClass="col"
              componentClass="div"
              md={6}
              xs={12}
            >
              <Row
                bsClass="row"
                componentClass="div"
              >
                <Col
                  bsClass="col"
                  componentClass="div"
                  md={3}
                  xs={12}
                >
                  <ControlLabel
                    bsClass="control-label"
                    srOnly={false}
                  >
                    Start Date
                  </ControlLabel>
                </Col>
                <Col
                  bsClass="col"
                  componentClass="div"
                  md={9}
                  xs={12}
                >
                  <DatePicker
                    calendarIcon={
                      <svg
                        height="19"
                        viewBox="0 0 19 19"
                        width="19"
                        xmlns="http://www.w3.org/2000/svg"
                      >
                        <g
                          stroke="black"
                          strokeWidth="2"
                        >
                          <rect
                            fill="none"
                            height="15"
                            width="15"
                            x="2"
                            y="2"
                          />
                          <line
                            x1="6"
                            x2="6"
                            y1="0"
                            y2="4"
                          />
                          <line
                            x1="13"
                            x2="13"
                            y1="0"
                            y2="4"
                          />
                        </g>
                      </svg>
                    }
                    clearIcon={
                      <svg
                        height="19"
                        viewBox="0 0 19 19"
                        width="19"
                        xmlns="http://www.w3.org/2000/svg"
                      >
                        <g
                          stroke="black"
                          strokeWidth="2"
                        >
                          <line
                            x1="4"
                            x2="15"
                            y1="4"
                            y2="15"
                          />
                          <line
                            x1="15"
                            x2="4"
                            y1="4"
                            y2="15"
                          />
                        </g>
                      </svg>
                    }
                    isOpen={null}
                    onChange={[Function]}
                    returnValue="start"
                    value={2017-12-31T23:00:00.000Z}
                  />
                </Col>
              </Row>
            </Col>,
            <Col
              bsClass="col"
              componentClass="div"
              md={6}
              xs={12}
            >
              <Row
                bsClass="row"
                componentClass="div"
              >
                <Col
                  bsClass="col"
                  componentClass="div"
                  md={3}
                  xs={12}
                >
                  <ControlLabel
                    bsClass="control-label"
                    srOnly={false}
                  >
                    End Date
                  </ControlLabel>
                </Col>
                <Col
                  bsClass="col"
                  componentClass="div"
                  md={9}
                  xs={12}
                >
                  <DatePicker
                    calendarIcon={
                      <svg
                        height="19"
                        viewBox="0 0 19 19"
                        width="19"
                        xmlns="http://www.w3.org/2000/svg"
                      >
                        <g
                          stroke="black"
                          strokeWidth="2"
                        >
                          <rect
                            fill="none"
                            height="15"
                            width="15"
                            x="2"
                            y="2"
                          />
                          <line
                            x1="6"
                            x2="6"
                            y1="0"
                            y2="4"
                          />
                          <line
                            x1="13"
                            x2="13"
                            y1="0"
                            y2="4"
                          />
                        </g>
                      </svg>
                    }
                    clearIcon={
                      <svg
                        height="19"
                        viewBox="0 0 19 19"
                        width="19"
                        xmlns="http://www.w3.org/2000/svg"
                      >
                        <g
                          stroke="black"
                          strokeWidth="2"
                        >
                          <line
                            x1="4"
                            x2="15"
                            y1="4"
                            y2="15"
                          />
                          <line
                            x1="15"
                            x2="4"
                            y1="4"
                            y2="15"
                          />
                        </g>
                      </svg>
                    }
                    isOpen={null}
                    onChange={[Function]}
                    returnValue="start"
                    value={2013-12-31T23:00:00.000Z}
                  />
                </Col>
              </Row>
            </Col>,
          ],
          "componentClass": "div",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "bsClass": "col",
              "children": <Row
                bsClass="row"
                componentClass="div"
              >
                <Col
                  bsClass="col"
                  componentClass="div"
                  md={3}
                  xs={12}
                >
                  <ControlLabel
                    bsClass="control-label"
                    srOnly={false}
                  >
                    Start Date
                  </ControlLabel>
                </Col>
                <Col
                  bsClass="col"
                  componentClass="div"
                  md={9}
                  xs={12}
                >
                  <DatePicker
                    calendarIcon={
                      <svg
                        height="19"
                        viewBox="0 0 19 19"
                        width="19"
                        xmlns="http://www.w3.org/2000/svg"
                      >
                        <g
                          stroke="black"
                          strokeWidth="2"
                        >
                          <rect
                            fill="none"
                            height="15"
                            width="15"
                            x="2"
                            y="2"
                          />
                          <line
                            x1="6"
                            x2="6"
                            y1="0"
                            y2="4"
                          />
                          <line
                            x1="13"
                            x2="13"
                            y1="0"
                            y2="4"
                          />
                        </g>
                      </svg>
                    }
                    clearIcon={
                      <svg
                        height="19"
                        viewBox="0 0 19 19"
                        width="19"
                        xmlns="http://www.w3.org/2000/svg"
                      >
                        <g
                          stroke="black"
                          strokeWidth="2"
                        >
                          <line
                            x1="4"
                            x2="15"
                            y1="4"
                            y2="15"
                          />
                          <line
                            x1="15"
                            x2="4"
                            y1="4"
                            y2="15"
                          />
                        </g>
                      </svg>
                    }
                    isOpen={null}
                    onChange={[Function]}
                    returnValue="start"
                    value={2017-12-31T23:00:00.000Z}
                  />
                </Col>
              </Row>,
              "componentClass": "div",
              "md": 6,
              "xs": 12,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "bsClass": "row",
                "children": Array [
                  <Col
                    bsClass="col"
                    componentClass="div"
                    md={3}
                    xs={12}
                  >
                    <ControlLabel
                      bsClass="control-label"
                      srOnly={false}
                    >
                      Start Date
                    </ControlLabel>
                  </Col>,
                  <Col
                    bsClass="col"
                    componentClass="div"
                    md={9}
                    xs={12}
                  >
                    <DatePicker
                      calendarIcon={
                        <svg
                          height="19"
                          viewBox="0 0 19 19"
                          width="19"
                          xmlns="http://www.w3.org/2000/svg"
                        >
                          <g
                            stroke="black"
                            strokeWidth="2"
                          >
                            <rect
                              fill="none"
                              height="15"
                              width="15"
                              x="2"
                              y="2"
                            />
                            <line
                              x1="6"
                              x2="6"
                              y1="0"
                              y2="4"
                            />
                            <line
                              x1="13"
                              x2="13"
                              y1="0"
                              y2="4"
                            />
                          </g>
                        </svg>
                      }
                      clearIcon={
                        <svg
                          height="19"
                          viewBox="0 0 19 19"
                          width="19"
                          xmlns="http://www.w3.org/2000/svg"
                        >
                          <g
                            stroke="black"
                            strokeWidth="2"
                          >
                            <line
                              x1="4"
                              x2="15"
                              y1="4"
                              y2="15"
                            />
                            <line
                              x1="15"
                              x2="4"
                              y1="4"
                              y2="15"
                            />
                          </g>
                        </svg>
                      }
                      isOpen={null}
                      onChange={[Function]}
                      returnValue="start"
                      value={2017-12-31T23:00:00.000Z}
                    />
                  </Col>,
                ],
                "componentClass": "div",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "bsClass": "col",
                    "children": <ControlLabel
                      bsClass="control-label"
                      srOnly={false}
                    >
                      Start Date
                    </ControlLabel>,
                    "componentClass": "div",
                    "md": 3,
                    "xs": 12,
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "bsClass": "control-label",
                      "children": "Start Date",
                      "srOnly": false,
                    },
                    "ref": null,
                    "rendered": "Start Date",
                    "type": [Function],
                  },
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "bsClass": "col",
                    "children": <DatePicker
                      calendarIcon={
                        <svg
                          height="19"
                          viewBox="0 0 19 19"
                          width="19"
                          xmlns="http://www.w3.org/2000/svg"
                        >
                          <g
                            stroke="black"
                            strokeWidth="2"
                          >
                            <rect
                              fill="none"
                              height="15"
                              width="15"
                              x="2"
                              y="2"
                            />
                            <line
                              x1="6"
                              x2="6"
                              y1="0"
                              y2="4"
                            />
                            <line
                              x1="13"
                              x2="13"
                              y1="0"
                              y2="4"
                            />
                          </g>
                        </svg>
                      }
                      clearIcon={
                        <svg
                          height="19"
                          viewBox="0 0 19 19"
                          width="19"
                          xmlns="http://www.w3.org/2000/svg"
                        >
                          <g
                            stroke="black"
                            strokeWidth="2"
                          >
                            <line
                              x1="4"
                              x2="15"
                              y1="4"
                              y2="15"
                            />
                            <line
                              x1="15"
                              x2="4"
                              y1="4"
                              y2="15"
                            />
                          </g>
                        </svg>
                      }
                      isOpen={null}
                      onChange={[Function]}
                      returnValue="start"
                      value={2017-12-31T23:00:00.000Z}
                    />,
                    "componentClass": "div",
                    "md": 9,
                    "xs": 12,
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "calendarIcon": <svg
                        height="19"
                        viewBox="0 0 19 19"
                        width="19"
                        xmlns="http://www.w3.org/2000/svg"
                      >
                        <g
                          stroke="black"
                          strokeWidth="2"
                        >
                          <rect
                            fill="none"
                            height="15"
                            width="15"
                            x="2"
                            y="2"
                          />
                          <line
                            x1="6"
                            x2="6"
                            y1="0"
                            y2="4"
                          />
                          <line
                            x1="13"
                            x2="13"
                            y1="0"
                            y2="4"
                          />
                        </g>
                      </svg>,
                      "clearIcon": <svg
                        height="19"
                        viewBox="0 0 19 19"
                        width="19"
                        xmlns="http://www.w3.org/2000/svg"
                      >
                        <g
                          stroke="black"
                          strokeWidth="2"
                        >
                          <line
                            x1="4"
                            x2="15"
                            y1="4"
                            y2="15"
                          />
                          <line
                            x1="15"
                            x2="4"
                            y1="4"
                            y2="15"
                          />
                        </g>
                      </svg>,
                      "isOpen": null,
                      "onChange": [Function],
                      "returnValue": "start",
                      "value": 2017-12-31T23:00:00.000Z,
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                  "type": [Function],
                },
              ],
              "type": [Function],
            },
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "bsClass": "col",
              "children": <Row
                bsClass="row"
                componentClass="div"
              >
                <Col
                  bsClass="col"
                  componentClass="div"
                  md={3}
                  xs={12}
                >
                  <ControlLabel
                    bsClass="control-label"
                    srOnly={false}
                  >
                    End Date
                  </ControlLabel>
                </Col>
                <Col
                  bsClass="col"
                  componentClass="div"
                  md={9}
                  xs={12}
                >
                  <DatePicker
                    calendarIcon={
                      <svg
                        height="19"
                        viewBox="0 0 19 19"
                        width="19"
                        xmlns="http://www.w3.org/2000/svg"
                      >
                        <g
                          stroke="black"
                          strokeWidth="2"
                        >
                          <rect
                            fill="none"
                            height="15"
                            width="15"
                            x="2"
                            y="2"
                          />
                          <line
                            x1="6"
                            x2="6"
                            y1="0"
                            y2="4"
                          />
                          <line
                            x1="13"
                            x2="13"
                            y1="0"
                            y2="4"
                          />
                        </g>
                      </svg>
                    }
                    clearIcon={
                      <svg
                        height="19"
                        viewBox="0 0 19 19"
                        width="19"
                        xmlns="http://www.w3.org/2000/svg"
                      >
                        <g
                          stroke="black"
                          strokeWidth="2"
                        >
                          <line
                            x1="4"
                            x2="15"
                            y1="4"
                            y2="15"
                          />
                          <line
                            x1="15"
                            x2="4"
                            y1="4"
                            y2="15"
                          />
                        </g>
                      </svg>
                    }
                    isOpen={null}
                    onChange={[Function]}
                    returnValue="start"
                    value={2013-12-31T23:00:00.000Z}
                  />
                </Col>
              </Row>,
              "componentClass": "div",
              "md": 6,
              "xs": 12,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "bsClass": "row",
                "children": Array [
                  <Col
                    bsClass="col"
                    componentClass="div"
                    md={3}
                    xs={12}
                  >
                    <ControlLabel
                      bsClass="control-label"
                      srOnly={false}
                    >
                      End Date
                    </ControlLabel>
                  </Col>,
                  <Col
                    bsClass="col"
                    componentClass="div"
                    md={9}
                    xs={12}
                  >
                    <DatePicker
                      calendarIcon={
                        <svg
                          height="19"
                          viewBox="0 0 19 19"
                          width="19"
                          xmlns="http://www.w3.org/2000/svg"
                        >
                          <g
                            stroke="black"
                            strokeWidth="2"
                          >
                            <rect
                              fill="none"
                              height="15"
                              width="15"
                              x="2"
                              y="2"
                            />
                            <line
                              x1="6"
                              x2="6"
                              y1="0"
                              y2="4"
                            />
                            <line
                              x1="13"
                              x2="13"
                              y1="0"
                              y2="4"
                            />
                          </g>
                        </svg>
                      }
                      clearIcon={
                        <svg
                          height="19"
                          viewBox="0 0 19 19"
                          width="19"
                          xmlns="http://www.w3.org/2000/svg"
                        >
                          <g
                            stroke="black"
                            strokeWidth="2"
                          >
                            <line
                              x1="4"
                              x2="15"
                              y1="4"
                              y2="15"
                            />
                            <line
                              x1="15"
                              x2="4"
                              y1="4"
                              y2="15"
                            />
                          </g>
                        </svg>
                      }
                      isOpen={null}
                      onChange={[Function]}
                      returnValue="start"
                      value={2013-12-31T23:00:00.000Z}
                    />
                  </Col>,
                ],
                "componentClass": "div",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "bsClass": "col",
                    "children": <ControlLabel
                      bsClass="control-label"
                      srOnly={false}
                    >
                      End Date
                    </ControlLabel>,
                    "componentClass": "div",
                    "md": 3,
                    "xs": 12,
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "bsClass": "control-label",
                      "children": "End Date",
                      "srOnly": false,
                    },
                    "ref": null,
                    "rendered": "End Date",
                    "type": [Function],
                  },
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "bsClass": "col",
                    "children": <DatePicker
                      calendarIcon={
                        <svg
                          height="19"
                          viewBox="0 0 19 19"
                          width="19"
                          xmlns="http://www.w3.org/2000/svg"
                        >
                          <g
                            stroke="black"
                            strokeWidth="2"
                          >
                            <rect
                              fill="none"
                              height="15"
                              width="15"
                              x="2"
                              y="2"
                            />
                            <line
                              x1="6"
                              x2="6"
                              y1="0"
                              y2="4"
                            />
                            <line
                              x1="13"
                              x2="13"
                              y1="0"
                              y2="4"
                            />
                          </g>
                        </svg>
                      }
                      clearIcon={
                        <svg
                          height="19"
                          viewBox="0 0 19 19"
                          width="19"
                          xmlns="http://www.w3.org/2000/svg"
                        >
                          <g
                            stroke="black"
                            strokeWidth="2"
                          >
                            <line
                              x1="4"
                              x2="15"
                              y1="4"
                              y2="15"
                            />
                            <line
                              x1="15"
                              x2="4"
                              y1="4"
                              y2="15"
                            />
                          </g>
                        </svg>
                      }
                      isOpen={null}
                      onChange={[Function]}
                      returnValue="start"
                      value={2013-12-31T23:00:00.000Z}
                    />,
                    "componentClass": "div",
                    "md": 9,
                    "xs": 12,
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "calendarIcon": <svg
                        height="19"
                        viewBox="0 0 19 19"
                        width="19"
                        xmlns="http://www.w3.org/2000/svg"
                      >
                        <g
                          stroke="black"
                          strokeWidth="2"
                        >
                          <rect
                            fill="none"
                            height="15"
                            width="15"
                            x="2"
                            y="2"
                          />
                          <line
                            x1="6"
                            x2="6"
                            y1="0"
                            y2="4"
                          />
                          <line
                            x1="13"
                            x2="13"
                            y1="0"
                            y2="4"
                          />
                        </g>
                      </svg>,
                      "clearIcon": <svg
                        height="19"
                        viewBox="0 0 19 19"
                        width="19"
                        xmlns="http://www.w3.org/2000/svg"
                      >
                        <g
                          stroke="black"
                          strokeWidth="2"
                        >
                          <line
                            x1="4"
                            x2="15"
                            y1="4"
                            y2="15"
                          />
                          <line
                            x1="15"
                            x2="4"
                            y1="4"
                            y2="15"
                          />
                        </g>
                      </svg>,
                      "isOpen": null,
                      "onChange": [Function],
                      "returnValue": "start",
                      "value": 2013-12-31T23:00:00.000Z,
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                  "type": [Function],
                },
              ],
              "type": [Function],
            },
            "type": [Function],
          },
        ],
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "bsClass": "row",
          "children": <Col
            bsClass="col"
            componentClass="div"
            md={12}
            xs={12}
          >
            <Validator
              errorMessage="Start Date should be before or equal to End Date. Please check"
              max={2013-12-31T23:00:00.000Z}
              min={2017-12-31T23:00:00.000Z}
            />
          </Col>,
          "componentClass": "div",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "bsClass": "col",
            "children": <Validator
              errorMessage="Start Date should be before or equal to End Date. Please check"
              max={2013-12-31T23:00:00.000Z}
              min={2017-12-31T23:00:00.000Z}
            />,
            "componentClass": "div",
            "md": 12,
            "xs": 12,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "errorMessage": "Start Date should be before or equal to End Date. Please check",
              "max": 2013-12-31T23:00:00.000Z,
              "min": 2017-12-31T23:00:00.000Z,
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          "type": [Function],
        },
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "bsClass": "row",
          "children": Array [
            <Col
              bsClass="col"
              componentClass="div"
              md={6}
              xs={12}
            >
              <Row
                bsClass="row"
                componentClass="div"
              >
                <Col
                  bsClass="col"
                  componentClass="div"
                  md={3}
                  xs={12}
                >
                  <ControlLabel
                    bsClass="control-label"
                    srOnly={false}
                  >
                    Set Minimun
                  </ControlLabel>
                </Col>
                <Col
                  bsClass="col"
                  componentClass="div"
                  md={9}
                  xs={12}
                >
                  <FormControlWithDelay
                    onChange={[Function]}
                    placeholder="Enter min"
                    value={0}
                  />
                </Col>
              </Row>
            </Col>,
            <Col
              bsClass="col"
              componentClass="div"
              md={6}
              xs={12}
            >
              <Row
                bsClass="row"
                componentClass="div"
              >
                <Col
                  bsClass="col"
                  componentClass="div"
                  md={3}
                  xs={12}
                >
                  <ControlLabel
                    bsClass="control-label"
                    srOnly={false}
                  >
                    Set Maximun
                  </ControlLabel>
                </Col>
                <Col
                  bsClass="col"
                  componentClass="div"
                  md={9}
                  xs={12}
                >
                  <FormControlWithDelay
                    onChange={[Function]}
                    placeholder="Enter max"
                    value={9000}
                  />
                </Col>
              </Row>
            </Col>,
            <Col
              bsClass="col"
              componentClass="div"
              md={12}
              xs={12}
            >
              <Validator
                errorMessage="Minimum value should be less than or equals to Maximum value. Please check"
                max={9000}
                min={0}
              />
            </Col>,
          ],
          "componentClass": "div",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "bsClass": "col",
              "children": <Row
                bsClass="row"
                componentClass="div"
              >
                <Col
                  bsClass="col"
                  componentClass="div"
                  md={3}
                  xs={12}
                >
                  <ControlLabel
                    bsClass="control-label"
                    srOnly={false}
                  >
                    Set Minimun
                  </ControlLabel>
                </Col>
                <Col
                  bsClass="col"
                  componentClass="div"
                  md={9}
                  xs={12}
                >
                  <FormControlWithDelay
                    onChange={[Function]}
                    placeholder="Enter min"
                    value={0}
                  />
                </Col>
              </Row>,
              "componentClass": "div",
              "md": 6,
              "xs": 12,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "bsClass": "row",
                "children": Array [
                  <Col
                    bsClass="col"
                    componentClass="div"
                    md={3}
                    xs={12}
                  >
                    <ControlLabel
                      bsClass="control-label"
                      srOnly={false}
                    >
                      Set Minimun
                    </ControlLabel>
                  </Col>,
                  <Col
                    bsClass="col"
                    componentClass="div"
                    md={9}
                    xs={12}
                  >
                    <FormControlWithDelay
                      onChange={[Function]}
                      placeholder="Enter min"
                      value={0}
                    />
                  </Col>,
                ],
                "componentClass": "div",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "bsClass": "col",
                    "children": <ControlLabel
                      bsClass="control-label"
                      srOnly={false}
                    >
                      Set Minimun
                    </ControlLabel>,
                    "componentClass": "div",
                    "md": 3,
                    "xs": 12,
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "bsClass": "control-label",
                      "children": "Set Minimun",
                      "srOnly": false,
                    },
                    "ref": null,
                    "rendered": "Set Minimun",
                    "type": [Function],
                  },
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "bsClass": "col",
                    "children": <FormControlWithDelay
                      onChange={[Function]}
                      placeholder="Enter min"
                      value={0}
                    />,
                    "componentClass": "div",
                    "md": 9,
                    "xs": 12,
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "onChange": [Function],
                      "placeholder": "Enter min",
                      "value": 0,
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                  "type": [Function],
                },
              ],
              "type": [Function],
            },
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "bsClass": "col",
              "children": <Row
                bsClass="row"
                componentClass="div"
              >
                <Col
                  bsClass="col"
                  componentClass="div"
                  md={3}
                  xs={12}
                >
                  <ControlLabel
                    bsClass="control-label"
                    srOnly={false}
                  >
                    Set Maximun
                  </ControlLabel>
                </Col>
                <Col
                  bsClass="col"
                  componentClass="div"
                  md={9}
                  xs={12}
                >
                  <FormControlWithDelay
                    onChange={[Function]}
                    placeholder="Enter max"
                    value={9000}
                  />
                </Col>
              </Row>,
              "componentClass": "div",
              "md": 6,
              "xs": 12,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "bsClass": "row",
                "children": Array [
                  <Col
                    bsClass="col"
                    componentClass="div"
                    md={3}
                    xs={12}
                  >
                    <ControlLabel
                      bsClass="control-label"
                      srOnly={false}
                    >
                      Set Maximun
                    </ControlLabel>
                  </Col>,
                  <Col
                    bsClass="col"
                    componentClass="div"
                    md={9}
                    xs={12}
                  >
                    <FormControlWithDelay
                      onChange={[Function]}
                      placeholder="Enter max"
                      value={9000}
                    />
                  </Col>,
                ],
                "componentClass": "div",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "bsClass": "col",
                    "children": <ControlLabel
                      bsClass="control-label"
                      srOnly={false}
                    >
                      Set Maximun
                    </ControlLabel>,
                    "componentClass": "div",
                    "md": 3,
                    "xs": 12,
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "bsClass": "control-label",
                      "children": "Set Maximun",
                      "srOnly": false,
                    },
                    "ref": null,
                    "rendered": "Set Maximun",
                    "type": [Function],
                  },
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "bsClass": "col",
                    "children": <FormControlWithDelay
                      onChange={[Function]}
                      placeholder="Enter max"
                      value={9000}
                    />,
                    "componentClass": "div",
                    "md": 9,
                    "xs": 12,
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "onChange": [Function],
                      "placeholder": "Enter max",
                      "value": 9000,
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                  "type": [Function],
                },
              ],
              "type": [Function],
            },
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "bsClass": "col",
              "children": <Validator
                errorMessage="Minimum value should be less than or equals to Maximum value. Please check"
                max={9000}
                min={0}
              />,
              "componentClass": "div",
              "md": 12,
              "xs": 12,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "errorMessage": "Minimum value should be less than or equals to Maximum value. Please check",
                "max": 9000,
                "min": 0,
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            "type": [Function],
          },
        ],
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "bsClass": "row",
          "children": <Col
            bsClass="col"
            componentClass="div"
            md={12}
            xs={12}
          >
            <InstrumentSelection
              instruments={Array []}
              onChange={[Function]}
            />
          </Col>,
          "componentClass": "div",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "bsClass": "col",
            "children": <InstrumentSelection
              instruments={Array []}
              onChange={[Function]}
            />,
            "componentClass": "div",
            "md": 12,
            "xs": 12,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "instruments": Array [],
              "onChange": [Function],
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          "type": [Function],
        },
        "type": [Function],
      },
    ],
    "type": Symbol(react.fragment),
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "children": Array [
          <Row
            bsClass="row"
            componentClass="div"
          >
            <Connect(LoadingIndicator) />
          </Row>,
          <Row
            bsClass="row"
            componentClass="div"
          >
            <Col
              bsClass="col"
              componentClass="div"
              md={6}
              xs={12}
            >
              <Row
                bsClass="row"
                componentClass="div"
              >
                <Col
                  bsClass="col"
                  componentClass="div"
                  md={3}
                  xs={12}
                >
                  <ControlLabel
                    bsClass="control-label"
                    srOnly={false}
                  >
                    Start Date
                  </ControlLabel>
                </Col>
                <Col
                  bsClass="col"
                  componentClass="div"
                  md={9}
                  xs={12}
                >
                  <DatePicker
                    calendarIcon={
                      <svg
                        height="19"
                        viewBox="0 0 19 19"
                        width="19"
                        xmlns="http://www.w3.org/2000/svg"
                      >
                        <g
                          stroke="black"
                          strokeWidth="2"
                        >
                          <rect
                            fill="none"
                            height="15"
                            width="15"
                            x="2"
                            y="2"
                          />
                          <line
                            x1="6"
                            x2="6"
                            y1="0"
                            y2="4"
                          />
                          <line
                            x1="13"
                            x2="13"
                            y1="0"
                            y2="4"
                          />
                        </g>
                      </svg>
                    }
                    clearIcon={
                      <svg
                        height="19"
                        viewBox="0 0 19 19"
                        width="19"
                        xmlns="http://www.w3.org/2000/svg"
                      >
                        <g
                          stroke="black"
                          strokeWidth="2"
                        >
                          <line
                            x1="4"
                            x2="15"
                            y1="4"
                            y2="15"
                          />
                          <line
                            x1="15"
                            x2="4"
                            y1="4"
                            y2="15"
                          />
                        </g>
                      </svg>
                    }
                    isOpen={null}
                    onChange={[Function]}
                    returnValue="start"
                    value={2017-12-31T23:00:00.000Z}
                  />
                </Col>
              </Row>
            </Col>
            <Col
              bsClass="col"
              componentClass="div"
              md={6}
              xs={12}
            >
              <Row
                bsClass="row"
                componentClass="div"
              >
                <Col
                  bsClass="col"
                  componentClass="div"
                  md={3}
                  xs={12}
                >
                  <ControlLabel
                    bsClass="control-label"
                    srOnly={false}
                  >
                    End Date
                  </ControlLabel>
                </Col>
                <Col
                  bsClass="col"
                  componentClass="div"
                  md={9}
                  xs={12}
                >
                  <DatePicker
                    calendarIcon={
                      <svg
                        height="19"
                        viewBox="0 0 19 19"
                        width="19"
                        xmlns="http://www.w3.org/2000/svg"
                      >
                        <g
                          stroke="black"
                          strokeWidth="2"
                        >
                          <rect
                            fill="none"
                            height="15"
                            width="15"
                            x="2"
                            y="2"
                          />
                          <line
                            x1="6"
                            x2="6"
                            y1="0"
                            y2="4"
                          />
                          <line
                            x1="13"
                            x2="13"
                            y1="0"
                            y2="4"
                          />
                        </g>
                      </svg>
                    }
                    clearIcon={
                      <svg
                        height="19"
                        viewBox="0 0 19 19"
                        width="19"
                        xmlns="http://www.w3.org/2000/svg"
                      >
                        <g
                          stroke="black"
                          strokeWidth="2"
                        >
                          <line
                            x1="4"
                            x2="15"
                            y1="4"
                            y2="15"
                          />
                          <line
                            x1="15"
                            x2="4"
                            y1="4"
                            y2="15"
                          />
                        </g>
                      </svg>
                    }
                    isOpen={null}
                    onChange={[Function]}
                    returnValue="start"
                    value={2013-12-31T23:00:00.000Z}
                  />
                </Col>
              </Row>
            </Col>
          </Row>,
          <Row
            bsClass="row"
            componentClass="div"
          >
            <Col
              bsClass="col"
              componentClass="div"
              md={12}
              xs={12}
            >
              <Validator
                errorMessage="Start Date should be before or equal to End Date. Please check"
                max={2013-12-31T23:00:00.000Z}
                min={2017-12-31T23:00:00.000Z}
              />
            </Col>
          </Row>,
          <Row
            bsClass="row"
            componentClass="div"
          >
            <Col
              bsClass="col"
              componentClass="div"
              md={6}
              xs={12}
            >
              <Row
                bsClass="row"
                componentClass="div"
              >
                <Col
                  bsClass="col"
                  componentClass="div"
                  md={3}
                  xs={12}
                >
                  <ControlLabel
                    bsClass="control-label"
                    srOnly={false}
                  >
                    Set Minimun
                  </ControlLabel>
                </Col>
                <Col
                  bsClass="col"
                  componentClass="div"
                  md={9}
                  xs={12}
                >
                  <FormControlWithDelay
                    onChange={[Function]}
                    placeholder="Enter min"
                    value={0}
                  />
                </Col>
              </Row>
            </Col>
            <Col
              bsClass="col"
              componentClass="div"
              md={6}
              xs={12}
            >
              <Row
                bsClass="row"
                componentClass="div"
              >
                <Col
                  bsClass="col"
                  componentClass="div"
                  md={3}
                  xs={12}
                >
                  <ControlLabel
                    bsClass="control-label"
                    srOnly={false}
                  >
                    Set Maximun
                  </ControlLabel>
                </Col>
                <Col
                  bsClass="col"
                  componentClass="div"
                  md={9}
                  xs={12}
                >
                  <FormControlWithDelay
                    onChange={[Function]}
                    placeholder="Enter max"
                    value={9000}
                  />
                </Col>
              </Row>
            </Col>
            <Col
              bsClass="col"
              componentClass="div"
              md={12}
              xs={12}
            >
              <Validator
                errorMessage="Minimum value should be less than or equals to Maximum value. Please check"
                max={9000}
                min={0}
              />
            </Col>
          </Row>,
          <Row
            bsClass="row"
            componentClass="div"
          >
            <Col
              bsClass="col"
              componentClass="div"
              md={12}
              xs={12}
            >
              <InstrumentSelection
                instruments={Array []}
                onChange={[Function]}
              />
            </Col>
          </Row>,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "bsClass": "row",
            "children": <Connect(LoadingIndicator) />,
            "componentClass": "div",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {},
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "bsClass": "row",
            "children": Array [
              <Col
                bsClass="col"
                componentClass="div"
                md={6}
                xs={12}
              >
                <Row
                  bsClass="row"
                  componentClass="div"
                >
                  <Col
                    bsClass="col"
                    componentClass="div"
                    md={3}
                    xs={12}
                  >
                    <ControlLabel
                      bsClass="control-label"
                      srOnly={false}
                    >
                      Start Date
                    </ControlLabel>
                  </Col>
                  <Col
                    bsClass="col"
                    componentClass="div"
                    md={9}
                    xs={12}
                  >
                    <DatePicker
                      calendarIcon={
                        <svg
                          height="19"
                          viewBox="0 0 19 19"
                          width="19"
                          xmlns="http://www.w3.org/2000/svg"
                        >
                          <g
                            stroke="black"
                            strokeWidth="2"
                          >
                            <rect
                              fill="none"
                              height="15"
                              width="15"
                              x="2"
                              y="2"
                            />
                            <line
                              x1="6"
                              x2="6"
                              y1="0"
                              y2="4"
                            />
                            <line
                              x1="13"
                              x2="13"
                              y1="0"
                              y2="4"
                            />
                          </g>
                        </svg>
                      }
                      clearIcon={
                        <svg
                          height="19"
                          viewBox="0 0 19 19"
                          width="19"
                          xmlns="http://www.w3.org/2000/svg"
                        >
                          <g
                            stroke="black"
                            strokeWidth="2"
                          >
                            <line
                              x1="4"
                              x2="15"
                              y1="4"
                              y2="15"
                            />
                            <line
                              x1="15"
                              x2="4"
                              y1="4"
                              y2="15"
                            />
                          </g>
                        </svg>
                      }
                      isOpen={null}
                      onChange={[Function]}
                      returnValue="start"
                      value={2017-12-31T23:00:00.000Z}
                    />
                  </Col>
                </Row>
              </Col>,
              <Col
                bsClass="col"
                componentClass="div"
                md={6}
                xs={12}
              >
                <Row
                  bsClass="row"
                  componentClass="div"
                >
                  <Col
                    bsClass="col"
                    componentClass="div"
                    md={3}
                    xs={12}
                  >
                    <ControlLabel
                      bsClass="control-label"
                      srOnly={false}
                    >
                      End Date
                    </ControlLabel>
                  </Col>
                  <Col
                    bsClass="col"
                    componentClass="div"
                    md={9}
                    xs={12}
                  >
                    <DatePicker
                      calendarIcon={
                        <svg
                          height="19"
                          viewBox="0 0 19 19"
                          width="19"
                          xmlns="http://www.w3.org/2000/svg"
                        >
                          <g
                            stroke="black"
                            strokeWidth="2"
                          >
                            <rect
                              fill="none"
                              height="15"
                              width="15"
                              x="2"
                              y="2"
                            />
                            <line
                              x1="6"
                              x2="6"
                              y1="0"
                              y2="4"
                            />
                            <line
                              x1="13"
                              x2="13"
                              y1="0"
                              y2="4"
                            />
                          </g>
                        </svg>
                      }
                      clearIcon={
                        <svg
                          height="19"
                          viewBox="0 0 19 19"
                          width="19"
                          xmlns="http://www.w3.org/2000/svg"
                        >
                          <g
                            stroke="black"
                            strokeWidth="2"
                          >
                            <line
                              x1="4"
                              x2="15"
                              y1="4"
                              y2="15"
                            />
                            <line
                              x1="15"
                              x2="4"
                              y1="4"
                              y2="15"
                            />
                          </g>
                        </svg>
                      }
                      isOpen={null}
                      onChange={[Function]}
                      returnValue="start"
                      value={2013-12-31T23:00:00.000Z}
                    />
                  </Col>
                </Row>
              </Col>,
            ],
            "componentClass": "div",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "bsClass": "col",
                "children": <Row
                  bsClass="row"
                  componentClass="div"
                >
                  <Col
                    bsClass="col"
                    componentClass="div"
                    md={3}
                    xs={12}
                  >
                    <ControlLabel
                      bsClass="control-label"
                      srOnly={false}
                    >
                      Start Date
                    </ControlLabel>
                  </Col>
                  <Col
                    bsClass="col"
                    componentClass="div"
                    md={9}
                    xs={12}
                  >
                    <DatePicker
                      calendarIcon={
                        <svg
                          height="19"
                          viewBox="0 0 19 19"
                          width="19"
                          xmlns="http://www.w3.org/2000/svg"
                        >
                          <g
                            stroke="black"
                            strokeWidth="2"
                          >
                            <rect
                              fill="none"
                              height="15"
                              width="15"
                              x="2"
                              y="2"
                            />
                            <line
                              x1="6"
                              x2="6"
                              y1="0"
                              y2="4"
                            />
                            <line
                              x1="13"
                              x2="13"
                              y1="0"
                              y2="4"
                            />
                          </g>
                        </svg>
                      }
                      clearIcon={
                        <svg
                          height="19"
                          viewBox="0 0 19 19"
                          width="19"
                          xmlns="http://www.w3.org/2000/svg"
                        >
                          <g
                            stroke="black"
                            strokeWidth="2"
                          >
                            <line
                              x1="4"
                              x2="15"
                              y1="4"
                              y2="15"
                            />
                            <line
                              x1="15"
                              x2="4"
                              y1="4"
                              y2="15"
                            />
                          </g>
                        </svg>
                      }
                      isOpen={null}
                      onChange={[Function]}
                      returnValue="start"
                      value={2017-12-31T23:00:00.000Z}
                    />
                  </Col>
                </Row>,
                "componentClass": "div",
                "md": 6,
                "xs": 12,
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "bsClass": "row",
                  "children": Array [
                    <Col
                      bsClass="col"
                      componentClass="div"
                      md={3}
                      xs={12}
                    >
                      <ControlLabel
                        bsClass="control-label"
                        srOnly={false}
                      >
                        Start Date
                      </ControlLabel>
                    </Col>,
                    <Col
                      bsClass="col"
                      componentClass="div"
                      md={9}
                      xs={12}
                    >
                      <DatePicker
                        calendarIcon={
                          <svg
                            height="19"
                            viewBox="0 0 19 19"
                            width="19"
                            xmlns="http://www.w3.org/2000/svg"
                          >
                            <g
                              stroke="black"
                              strokeWidth="2"
                            >
                              <rect
                                fill="none"
                                height="15"
                                width="15"
                                x="2"
                                y="2"
                              />
                              <line
                                x1="6"
                                x2="6"
                                y1="0"
                                y2="4"
                              />
                              <line
                                x1="13"
                                x2="13"
                                y1="0"
                                y2="4"
                              />
                            </g>
                          </svg>
                        }
                        clearIcon={
                          <svg
                            height="19"
                            viewBox="0 0 19 19"
                            width="19"
                            xmlns="http://www.w3.org/2000/svg"
                          >
                            <g
                              stroke="black"
                              strokeWidth="2"
                            >
                              <line
                                x1="4"
                                x2="15"
                                y1="4"
                                y2="15"
                              />
                              <line
                                x1="15"
                                x2="4"
                                y1="4"
                                y2="15"
                              />
                            </g>
                          </svg>
                        }
                        isOpen={null}
                        onChange={[Function]}
                        returnValue="start"
                        value={2017-12-31T23:00:00.000Z}
                      />
                    </Col>,
                  ],
                  "componentClass": "div",
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "bsClass": "col",
                      "children": <ControlLabel
                        bsClass="control-label"
                        srOnly={false}
                      >
                        Start Date
                      </ControlLabel>,
                      "componentClass": "div",
                      "md": 3,
                      "xs": 12,
                    },
                    "ref": null,
                    "rendered": Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {
                        "bsClass": "control-label",
                        "children": "Start Date",
                        "srOnly": false,
                      },
                      "ref": null,
                      "rendered": "Start Date",
                      "type": [Function],
                    },
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "bsClass": "col",
                      "children": <DatePicker
                        calendarIcon={
                          <svg
                            height="19"
                            viewBox="0 0 19 19"
                            width="19"
                            xmlns="http://www.w3.org/2000/svg"
                          >
                            <g
                              stroke="black"
                              strokeWidth="2"
                            >
                              <rect
                                fill="none"
                                height="15"
                                width="15"
                                x="2"
                                y="2"
                              />
                              <line
                                x1="6"
                                x2="6"
                                y1="0"
                                y2="4"
                              />
                              <line
                                x1="13"
                                x2="13"
                                y1="0"
                                y2="4"
                              />
                            </g>
                          </svg>
                        }
                        clearIcon={
                          <svg
                            height="19"
                            viewBox="0 0 19 19"
                            width="19"
                            xmlns="http://www.w3.org/2000/svg"
                          >
                            <g
                              stroke="black"
                              strokeWidth="2"
                            >
                              <line
                                x1="4"
                                x2="15"
                                y1="4"
                                y2="15"
                              />
                              <line
                                x1="15"
                                x2="4"
                                y1="4"
                                y2="15"
                              />
                            </g>
                          </svg>
                        }
                        isOpen={null}
                        onChange={[Function]}
                        returnValue="start"
                        value={2017-12-31T23:00:00.000Z}
                      />,
                      "componentClass": "div",
                      "md": 9,
                      "xs": 12,
                    },
                    "ref": null,
                    "rendered": Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {
                        "calendarIcon": <svg
                          height="19"
                          viewBox="0 0 19 19"
                          width="19"
                          xmlns="http://www.w3.org/2000/svg"
                        >
                          <g
                            stroke="black"
                            strokeWidth="2"
                          >
                            <rect
                              fill="none"
                              height="15"
                              width="15"
                              x="2"
                              y="2"
                            />
                            <line
                              x1="6"
                              x2="6"
                              y1="0"
                              y2="4"
                            />
                            <line
                              x1="13"
                              x2="13"
                              y1="0"
                              y2="4"
                            />
                          </g>
                        </svg>,
                        "clearIcon": <svg
                          height="19"
                          viewBox="0 0 19 19"
                          width="19"
                          xmlns="http://www.w3.org/2000/svg"
                        >
                          <g
                            stroke="black"
                            strokeWidth="2"
                          >
                            <line
                              x1="4"
                              x2="15"
                              y1="4"
                              y2="15"
                            />
                            <line
                              x1="15"
                              x2="4"
                              y1="4"
                              y2="15"
                            />
                          </g>
                        </svg>,
                        "isOpen": null,
                        "onChange": [Function],
                        "returnValue": "start",
                        "value": 2017-12-31T23:00:00.000Z,
                      },
                      "ref": null,
                      "rendered": null,
                      "type": [Function],
                    },
                    "type": [Function],
                  },
                ],
                "type": [Function],
              },
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "bsClass": "col",
                "children": <Row
                  bsClass="row"
                  componentClass="div"
                >
                  <Col
                    bsClass="col"
                    componentClass="div"
                    md={3}
                    xs={12}
                  >
                    <ControlLabel
                      bsClass="control-label"
                      srOnly={false}
                    >
                      End Date
                    </ControlLabel>
                  </Col>
                  <Col
                    bsClass="col"
                    componentClass="div"
                    md={9}
                    xs={12}
                  >
                    <DatePicker
                      calendarIcon={
                        <svg
                          height="19"
                          viewBox="0 0 19 19"
                          width="19"
                          xmlns="http://www.w3.org/2000/svg"
                        >
                          <g
                            stroke="black"
                            strokeWidth="2"
                          >
                            <rect
                              fill="none"
                              height="15"
                              width="15"
                              x="2"
                              y="2"
                            />
                            <line
                              x1="6"
                              x2="6"
                              y1="0"
                              y2="4"
                            />
                            <line
                              x1="13"
                              x2="13"
                              y1="0"
                              y2="4"
                            />
                          </g>
                        </svg>
                      }
                      clearIcon={
                        <svg
                          height="19"
                          viewBox="0 0 19 19"
                          width="19"
                          xmlns="http://www.w3.org/2000/svg"
                        >
                          <g
                            stroke="black"
                            strokeWidth="2"
                          >
                            <line
                              x1="4"
                              x2="15"
                              y1="4"
                              y2="15"
                            />
                            <line
                              x1="15"
                              x2="4"
                              y1="4"
                              y2="15"
                            />
                          </g>
                        </svg>
                      }
                      isOpen={null}
                      onChange={[Function]}
                      returnValue="start"
                      value={2013-12-31T23:00:00.000Z}
                    />
                  </Col>
                </Row>,
                "componentClass": "div",
                "md": 6,
                "xs": 12,
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "bsClass": "row",
                  "children": Array [
                    <Col
                      bsClass="col"
                      componentClass="div"
                      md={3}
                      xs={12}
                    >
                      <ControlLabel
                        bsClass="control-label"
                        srOnly={false}
                      >
                        End Date
                      </ControlLabel>
                    </Col>,
                    <Col
                      bsClass="col"
                      componentClass="div"
                      md={9}
                      xs={12}
                    >
                      <DatePicker
                        calendarIcon={
                          <svg
                            height="19"
                            viewBox="0 0 19 19"
                            width="19"
                            xmlns="http://www.w3.org/2000/svg"
                          >
                            <g
                              stroke="black"
                              strokeWidth="2"
                            >
                              <rect
                                fill="none"
                                height="15"
                                width="15"
                                x="2"
                                y="2"
                              />
                              <line
                                x1="6"
                                x2="6"
                                y1="0"
                                y2="4"
                              />
                              <line
                                x1="13"
                                x2="13"
                                y1="0"
                                y2="4"
                              />
                            </g>
                          </svg>
                        }
                        clearIcon={
                          <svg
                            height="19"
                            viewBox="0 0 19 19"
                            width="19"
                            xmlns="http://www.w3.org/2000/svg"
                          >
                            <g
                              stroke="black"
                              strokeWidth="2"
                            >
                              <line
                                x1="4"
                                x2="15"
                                y1="4"
                                y2="15"
                              />
                              <line
                                x1="15"
                                x2="4"
                                y1="4"
                                y2="15"
                              />
                            </g>
                          </svg>
                        }
                        isOpen={null}
                        onChange={[Function]}
                        returnValue="start"
                        value={2013-12-31T23:00:00.000Z}
                      />
                    </Col>,
                  ],
                  "componentClass": "div",
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "bsClass": "col",
                      "children": <ControlLabel
                        bsClass="control-label"
                        srOnly={false}
                      >
                        End Date
                      </ControlLabel>,
                      "componentClass": "div",
                      "md": 3,
                      "xs": 12,
                    },
                    "ref": null,
                    "rendered": Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {
                        "bsClass": "control-label",
                        "children": "End Date",
                        "srOnly": false,
                      },
                      "ref": null,
                      "rendered": "End Date",
                      "type": [Function],
                    },
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "bsClass": "col",
                      "children": <DatePicker
                        calendarIcon={
                          <svg
                            height="19"
                            viewBox="0 0 19 19"
                            width="19"
                            xmlns="http://www.w3.org/2000/svg"
                          >
                            <g
                              stroke="black"
                              strokeWidth="2"
                            >
                              <rect
                                fill="none"
                                height="15"
                                width="15"
                                x="2"
                                y="2"
                              />
                              <line
                                x1="6"
                                x2="6"
                                y1="0"
                                y2="4"
                              />
                              <line
                                x1="13"
                                x2="13"
                                y1="0"
                                y2="4"
                              />
                            </g>
                          </svg>
                        }
                        clearIcon={
                          <svg
                            height="19"
                            viewBox="0 0 19 19"
                            width="19"
                            xmlns="http://www.w3.org/2000/svg"
                          >
                            <g
                              stroke="black"
                              strokeWidth="2"
                            >
                              <line
                                x1="4"
                                x2="15"
                                y1="4"
                                y2="15"
                              />
                              <line
                                x1="15"
                                x2="4"
                                y1="4"
                                y2="15"
                              />
                            </g>
                          </svg>
                        }
                        isOpen={null}
                        onChange={[Function]}
                        returnValue="start"
                        value={2013-12-31T23:00:00.000Z}
                      />,
                      "componentClass": "div",
                      "md": 9,
                      "xs": 12,
                    },
                    "ref": null,
                    "rendered": Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {
                        "calendarIcon": <svg
                          height="19"
                          viewBox="0 0 19 19"
                          width="19"
                          xmlns="http://www.w3.org/2000/svg"
                        >
                          <g
                            stroke="black"
                            strokeWidth="2"
                          >
                            <rect
                              fill="none"
                              height="15"
                              width="15"
                              x="2"
                              y="2"
                            />
                            <line
                              x1="6"
                              x2="6"
                              y1="0"
                              y2="4"
                            />
                            <line
                              x1="13"
                              x2="13"
                              y1="0"
                              y2="4"
                            />
                          </g>
                        </svg>,
                        "clearIcon": <svg
                          height="19"
                          viewBox="0 0 19 19"
                          width="19"
                          xmlns="http://www.w3.org/2000/svg"
                        >
                          <g
                            stroke="black"
                            strokeWidth="2"
                          >
                            <line
                              x1="4"
                              x2="15"
                              y1="4"
                              y2="15"
                            />
                            <line
                              x1="15"
                              x2="4"
                              y1="4"
                              y2="15"
                            />
                          </g>
                        </svg>,
                        "isOpen": null,
                        "onChange": [Function],
                        "returnValue": "start",
                        "value": 2013-12-31T23:00:00.000Z,
                      },
                      "ref": null,
                      "rendered": null,
                      "type": [Function],
                    },
                    "type": [Function],
                  },
                ],
                "type": [Function],
              },
              "type": [Function],
            },
          ],
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "bsClass": "row",
            "children": <Col
              bsClass="col"
              componentClass="div"
              md={12}
              xs={12}
            >
              <Validator
                errorMessage="Start Date should be before or equal to End Date. Please check"
                max={2013-12-31T23:00:00.000Z}
                min={2017-12-31T23:00:00.000Z}
              />
            </Col>,
            "componentClass": "div",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "bsClass": "col",
              "children": <Validator
                errorMessage="Start Date should be before or equal to End Date. Please check"
                max={2013-12-31T23:00:00.000Z}
                min={2017-12-31T23:00:00.000Z}
              />,
              "componentClass": "div",
              "md": 12,
              "xs": 12,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "errorMessage": "Start Date should be before or equal to End Date. Please check",
                "max": 2013-12-31T23:00:00.000Z,
                "min": 2017-12-31T23:00:00.000Z,
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            "type": [Function],
          },
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "bsClass": "row",
            "children": Array [
              <Col
                bsClass="col"
                componentClass="div"
                md={6}
                xs={12}
              >
                <Row
                  bsClass="row"
                  componentClass="div"
                >
                  <Col
                    bsClass="col"
                    componentClass="div"
                    md={3}
                    xs={12}
                  >
                    <ControlLabel
                      bsClass="control-label"
                      srOnly={false}
                    >
                      Set Minimun
                    </ControlLabel>
                  </Col>
                  <Col
                    bsClass="col"
                    componentClass="div"
                    md={9}
                    xs={12}
                  >
                    <FormControlWithDelay
                      onChange={[Function]}
                      placeholder="Enter min"
                      value={0}
                    />
                  </Col>
                </Row>
              </Col>,
              <Col
                bsClass="col"
                componentClass="div"
                md={6}
                xs={12}
              >
                <Row
                  bsClass="row"
                  componentClass="div"
                >
                  <Col
                    bsClass="col"
                    componentClass="div"
                    md={3}
                    xs={12}
                  >
                    <ControlLabel
                      bsClass="control-label"
                      srOnly={false}
                    >
                      Set Maximun
                    </ControlLabel>
                  </Col>
                  <Col
                    bsClass="col"
                    componentClass="div"
                    md={9}
                    xs={12}
                  >
                    <FormControlWithDelay
                      onChange={[Function]}
                      placeholder="Enter max"
                      value={9000}
                    />
                  </Col>
                </Row>
              </Col>,
              <Col
                bsClass="col"
                componentClass="div"
                md={12}
                xs={12}
              >
                <Validator
                  errorMessage="Minimum value should be less than or equals to Maximum value. Please check"
                  max={9000}
                  min={0}
                />
              </Col>,
            ],
            "componentClass": "div",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "bsClass": "col",
                "children": <Row
                  bsClass="row"
                  componentClass="div"
                >
                  <Col
                    bsClass="col"
                    componentClass="div"
                    md={3}
                    xs={12}
                  >
                    <ControlLabel
                      bsClass="control-label"
                      srOnly={false}
                    >
                      Set Minimun
                    </ControlLabel>
                  </Col>
                  <Col
                    bsClass="col"
                    componentClass="div"
                    md={9}
                    xs={12}
                  >
                    <FormControlWithDelay
                      onChange={[Function]}
                      placeholder="Enter min"
                      value={0}
                    />
                  </Col>
                </Row>,
                "componentClass": "div",
                "md": 6,
                "xs": 12,
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "bsClass": "row",
                  "children": Array [
                    <Col
                      bsClass="col"
                      componentClass="div"
                      md={3}
                      xs={12}
                    >
                      <ControlLabel
                        bsClass="control-label"
                        srOnly={false}
                      >
                        Set Minimun
                      </ControlLabel>
                    </Col>,
                    <Col
                      bsClass="col"
                      componentClass="div"
                      md={9}
                      xs={12}
                    >
                      <FormControlWithDelay
                        onChange={[Function]}
                        placeholder="Enter min"
                        value={0}
                      />
                    </Col>,
                  ],
                  "componentClass": "div",
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "bsClass": "col",
                      "children": <ControlLabel
                        bsClass="control-label"
                        srOnly={false}
                      >
                        Set Minimun
                      </ControlLabel>,
                      "componentClass": "div",
                      "md": 3,
                      "xs": 12,
                    },
                    "ref": null,
                    "rendered": Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {
                        "bsClass": "control-label",
                        "children": "Set Minimun",
                        "srOnly": false,
                      },
                      "ref": null,
                      "rendered": "Set Minimun",
                      "type": [Function],
                    },
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "bsClass": "col",
                      "children": <FormControlWithDelay
                        onChange={[Function]}
                        placeholder="Enter min"
                        value={0}
                      />,
                      "componentClass": "div",
                      "md": 9,
                      "xs": 12,
                    },
                    "ref": null,
                    "rendered": Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {
                        "onChange": [Function],
                        "placeholder": "Enter min",
                        "value": 0,
                      },
                      "ref": null,
                      "rendered": null,
                      "type": [Function],
                    },
                    "type": [Function],
                  },
                ],
                "type": [Function],
              },
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "bsClass": "col",
                "children": <Row
                  bsClass="row"
                  componentClass="div"
                >
                  <Col
                    bsClass="col"
                    componentClass="div"
                    md={3}
                    xs={12}
                  >
                    <ControlLabel
                      bsClass="control-label"
                      srOnly={false}
                    >
                      Set Maximun
                    </ControlLabel>
                  </Col>
                  <Col
                    bsClass="col"
                    componentClass="div"
                    md={9}
                    xs={12}
                  >
                    <FormControlWithDelay
                      onChange={[Function]}
                      placeholder="Enter max"
                      value={9000}
                    />
                  </Col>
                </Row>,
                "componentClass": "div",
                "md": 6,
                "xs": 12,
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "bsClass": "row",
                  "children": Array [
                    <Col
                      bsClass="col"
                      componentClass="div"
                      md={3}
                      xs={12}
                    >
                      <ControlLabel
                        bsClass="control-label"
                        srOnly={false}
                      >
                        Set Maximun
                      </ControlLabel>
                    </Col>,
                    <Col
                      bsClass="col"
                      componentClass="div"
                      md={9}
                      xs={12}
                    >
                      <FormControlWithDelay
                        onChange={[Function]}
                        placeholder="Enter max"
                        value={9000}
                      />
                    </Col>,
                  ],
                  "componentClass": "div",
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "bsClass": "col",
                      "children": <ControlLabel
                        bsClass="control-label"
                        srOnly={false}
                      >
                        Set Maximun
                      </ControlLabel>,
                      "componentClass": "div",
                      "md": 3,
                      "xs": 12,
                    },
                    "ref": null,
                    "rendered": Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {
                        "bsClass": "control-label",
                        "children": "Set Maximun",
                        "srOnly": false,
                      },
                      "ref": null,
                      "rendered": "Set Maximun",
                      "type": [Function],
                    },
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "bsClass": "col",
                      "children": <FormControlWithDelay
                        onChange={[Function]}
                        placeholder="Enter max"
                        value={9000}
                      />,
                      "componentClass": "div",
                      "md": 9,
                      "xs": 12,
                    },
                    "ref": null,
                    "rendered": Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {
                        "onChange": [Function],
                        "placeholder": "Enter max",
                        "value": 9000,
                      },
                      "ref": null,
                      "rendered": null,
                      "type": [Function],
                    },
                    "type": [Function],
                  },
                ],
                "type": [Function],
              },
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "bsClass": "col",
                "children": <Validator
                  errorMessage="Minimum value should be less than or equals to Maximum value. Please check"
                  max={9000}
                  min={0}
                />,
                "componentClass": "div",
                "md": 12,
                "xs": 12,
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "errorMessage": "Minimum value should be less than or equals to Maximum value. Please check",
                  "max": 9000,
                  "min": 0,
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              "type": [Function],
            },
          ],
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "bsClass": "row",
            "children": <Col
              bsClass="col"
              componentClass="div"
              md={12}
              xs={12}
            >
              <InstrumentSelection
                instruments={Array []}
                onChange={[Function]}
              />
            </Col>,
            "componentClass": "div",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "bsClass": "col",
              "children": <InstrumentSelection
                instruments={Array []}
                onChange={[Function]}
              />,
              "componentClass": "div",
              "md": 12,
              "xs": 12,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "instruments": Array [],
                "onChange": [Function],
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            "type": [Function],
          },
          "type": [Function],
        },
      ],
      "type": Symbol(react.fragment),
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;

exports[`Search when minValue > maxValue shows error message 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Search
    endDate={2013-12-31T23:00:00.000Z}
    instruments={Array []}
    maxValue={3}
    minValue={10}
    startDate={2013-12-31T23:00:00.000Z}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "children": Array [
        <Row
          bsClass="row"
          componentClass="div"
        >
          <Connect(LoadingIndicator) />
        </Row>,
        <Row
          bsClass="row"
          componentClass="div"
        >
          <Col
            bsClass="col"
            componentClass="div"
            md={6}
            xs={12}
          >
            <Row
              bsClass="row"
              componentClass="div"
            >
              <Col
                bsClass="col"
                componentClass="div"
                md={3}
                xs={12}
              >
                <ControlLabel
                  bsClass="control-label"
                  srOnly={false}
                >
                  Start Date
                </ControlLabel>
              </Col>
              <Col
                bsClass="col"
                componentClass="div"
                md={9}
                xs={12}
              >
                <DatePicker
                  calendarIcon={
                    <svg
                      height="19"
                      viewBox="0 0 19 19"
                      width="19"
                      xmlns="http://www.w3.org/2000/svg"
                    >
                      <g
                        stroke="black"
                        strokeWidth="2"
                      >
                        <rect
                          fill="none"
                          height="15"
                          width="15"
                          x="2"
                          y="2"
                        />
                        <line
                          x1="6"
                          x2="6"
                          y1="0"
                          y2="4"
                        />
                        <line
                          x1="13"
                          x2="13"
                          y1="0"
                          y2="4"
                        />
                      </g>
                    </svg>
                  }
                  clearIcon={
                    <svg
                      height="19"
                      viewBox="0 0 19 19"
                      width="19"
                      xmlns="http://www.w3.org/2000/svg"
                    >
                      <g
                        stroke="black"
                        strokeWidth="2"
                      >
                        <line
                          x1="4"
                          x2="15"
                          y1="4"
                          y2="15"
                        />
                        <line
                          x1="15"
                          x2="4"
                          y1="4"
                          y2="15"
                        />
                      </g>
                    </svg>
                  }
                  isOpen={null}
                  onChange={[Function]}
                  returnValue="start"
                  value={2013-12-31T23:00:00.000Z}
                />
              </Col>
            </Row>
          </Col>
          <Col
            bsClass="col"
            componentClass="div"
            md={6}
            xs={12}
          >
            <Row
              bsClass="row"
              componentClass="div"
            >
              <Col
                bsClass="col"
                componentClass="div"
                md={3}
                xs={12}
              >
                <ControlLabel
                  bsClass="control-label"
                  srOnly={false}
                >
                  End Date
                </ControlLabel>
              </Col>
              <Col
                bsClass="col"
                componentClass="div"
                md={9}
                xs={12}
              >
                <DatePicker
                  calendarIcon={
                    <svg
                      height="19"
                      viewBox="0 0 19 19"
                      width="19"
                      xmlns="http://www.w3.org/2000/svg"
                    >
                      <g
                        stroke="black"
                        strokeWidth="2"
                      >
                        <rect
                          fill="none"
                          height="15"
                          width="15"
                          x="2"
                          y="2"
                        />
                        <line
                          x1="6"
                          x2="6"
                          y1="0"
                          y2="4"
                        />
                        <line
                          x1="13"
                          x2="13"
                          y1="0"
                          y2="4"
                        />
                      </g>
                    </svg>
                  }
                  clearIcon={
                    <svg
                      height="19"
                      viewBox="0 0 19 19"
                      width="19"
                      xmlns="http://www.w3.org/2000/svg"
                    >
                      <g
                        stroke="black"
                        strokeWidth="2"
                      >
                        <line
                          x1="4"
                          x2="15"
                          y1="4"
                          y2="15"
                        />
                        <line
                          x1="15"
                          x2="4"
                          y1="4"
                          y2="15"
                        />
                      </g>
                    </svg>
                  }
                  isOpen={null}
                  onChange={[Function]}
                  returnValue="start"
                  value={2013-12-31T23:00:00.000Z}
                />
              </Col>
            </Row>
          </Col>
        </Row>,
        <Row
          bsClass="row"
          componentClass="div"
        >
          <Col
            bsClass="col"
            componentClass="div"
            md={12}
            xs={12}
          >
            <Validator
              errorMessage="Start Date should be before or equal to End Date. Please check"
              max={2013-12-31T23:00:00.000Z}
              min={2013-12-31T23:00:00.000Z}
            />
          </Col>
        </Row>,
        <Row
          bsClass="row"
          componentClass="div"
        >
          <Col
            bsClass="col"
            componentClass="div"
            md={6}
            xs={12}
          >
            <Row
              bsClass="row"
              componentClass="div"
            >
              <Col
                bsClass="col"
                componentClass="div"
                md={3}
                xs={12}
              >
                <ControlLabel
                  bsClass="control-label"
                  srOnly={false}
                >
                  Set Minimun
                </ControlLabel>
              </Col>
              <Col
                bsClass="col"
                componentClass="div"
                md={9}
                xs={12}
              >
                <FormControlWithDelay
                  onChange={[Function]}
                  placeholder="Enter min"
                  value={10}
                />
              </Col>
            </Row>
          </Col>
          <Col
            bsClass="col"
            componentClass="div"
            md={6}
            xs={12}
          >
            <Row
              bsClass="row"
              componentClass="div"
            >
              <Col
                bsClass="col"
                componentClass="div"
                md={3}
                xs={12}
              >
                <ControlLabel
                  bsClass="control-label"
                  srOnly={false}
                >
                  Set Maximun
                </ControlLabel>
              </Col>
              <Col
                bsClass="col"
                componentClass="div"
                md={9}
                xs={12}
              >
                <FormControlWithDelay
                  onChange={[Function]}
                  placeholder="Enter max"
                  value={3}
                />
              </Col>
            </Row>
          </Col>
          <Col
            bsClass="col"
            componentClass="div"
            md={12}
            xs={12}
          >
            <Validator
              errorMessage="Minimum value should be less than or equals to Maximum value. Please check"
              max={3}
              min={10}
            />
          </Col>
        </Row>,
        <Row
          bsClass="row"
          componentClass="div"
        >
          <Col
            bsClass="col"
            componentClass="div"
            md={12}
            xs={12}
          >
            <InstrumentSelection
              instruments={Array []}
              onChange={[Function]}
            />
          </Col>
        </Row>,
      ],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "bsClass": "row",
          "children": <Connect(LoadingIndicator) />,
          "componentClass": "div",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {},
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "bsClass": "row",
          "children": Array [
            <Col
              bsClass="col"
              componentClass="div"
              md={6}
              xs={12}
            >
              <Row
                bsClass="row"
                componentClass="div"
              >
                <Col
                  bsClass="col"
                  componentClass="div"
                  md={3}
                  xs={12}
                >
                  <ControlLabel
                    bsClass="control-label"
                    srOnly={false}
                  >
                    Start Date
                  </ControlLabel>
                </Col>
                <Col
                  bsClass="col"
                  componentClass="div"
                  md={9}
                  xs={12}
                >
                  <DatePicker
                    calendarIcon={
                      <svg
                        height="19"
                        viewBox="0 0 19 19"
                        width="19"
                        xmlns="http://www.w3.org/2000/svg"
                      >
                        <g
                          stroke="black"
                          strokeWidth="2"
                        >
                          <rect
                            fill="none"
                            height="15"
                            width="15"
                            x="2"
                            y="2"
                          />
                          <line
                            x1="6"
                            x2="6"
                            y1="0"
                            y2="4"
                          />
                          <line
                            x1="13"
                            x2="13"
                            y1="0"
                            y2="4"
                          />
                        </g>
                      </svg>
                    }
                    clearIcon={
                      <svg
                        height="19"
                        viewBox="0 0 19 19"
                        width="19"
                        xmlns="http://www.w3.org/2000/svg"
                      >
                        <g
                          stroke="black"
                          strokeWidth="2"
                        >
                          <line
                            x1="4"
                            x2="15"
                            y1="4"
                            y2="15"
                          />
                          <line
                            x1="15"
                            x2="4"
                            y1="4"
                            y2="15"
                          />
                        </g>
                      </svg>
                    }
                    isOpen={null}
                    onChange={[Function]}
                    returnValue="start"
                    value={2013-12-31T23:00:00.000Z}
                  />
                </Col>
              </Row>
            </Col>,
            <Col
              bsClass="col"
              componentClass="div"
              md={6}
              xs={12}
            >
              <Row
                bsClass="row"
                componentClass="div"
              >
                <Col
                  bsClass="col"
                  componentClass="div"
                  md={3}
                  xs={12}
                >
                  <ControlLabel
                    bsClass="control-label"
                    srOnly={false}
                  >
                    End Date
                  </ControlLabel>
                </Col>
                <Col
                  bsClass="col"
                  componentClass="div"
                  md={9}
                  xs={12}
                >
                  <DatePicker
                    calendarIcon={
                      <svg
                        height="19"
                        viewBox="0 0 19 19"
                        width="19"
                        xmlns="http://www.w3.org/2000/svg"
                      >
                        <g
                          stroke="black"
                          strokeWidth="2"
                        >
                          <rect
                            fill="none"
                            height="15"
                            width="15"
                            x="2"
                            y="2"
                          />
                          <line
                            x1="6"
                            x2="6"
                            y1="0"
                            y2="4"
                          />
                          <line
                            x1="13"
                            x2="13"
                            y1="0"
                            y2="4"
                          />
                        </g>
                      </svg>
                    }
                    clearIcon={
                      <svg
                        height="19"
                        viewBox="0 0 19 19"
                        width="19"
                        xmlns="http://www.w3.org/2000/svg"
                      >
                        <g
                          stroke="black"
                          strokeWidth="2"
                        >
                          <line
                            x1="4"
                            x2="15"
                            y1="4"
                            y2="15"
                          />
                          <line
                            x1="15"
                            x2="4"
                            y1="4"
                            y2="15"
                          />
                        </g>
                      </svg>
                    }
                    isOpen={null}
                    onChange={[Function]}
                    returnValue="start"
                    value={2013-12-31T23:00:00.000Z}
                  />
                </Col>
              </Row>
            </Col>,
          ],
          "componentClass": "div",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "bsClass": "col",
              "children": <Row
                bsClass="row"
                componentClass="div"
              >
                <Col
                  bsClass="col"
                  componentClass="div"
                  md={3}
                  xs={12}
                >
                  <ControlLabel
                    bsClass="control-label"
                    srOnly={false}
                  >
                    Start Date
                  </ControlLabel>
                </Col>
                <Col
                  bsClass="col"
                  componentClass="div"
                  md={9}
                  xs={12}
                >
                  <DatePicker
                    calendarIcon={
                      <svg
                        height="19"
                        viewBox="0 0 19 19"
                        width="19"
                        xmlns="http://www.w3.org/2000/svg"
                      >
                        <g
                          stroke="black"
                          strokeWidth="2"
                        >
                          <rect
                            fill="none"
                            height="15"
                            width="15"
                            x="2"
                            y="2"
                          />
                          <line
                            x1="6"
                            x2="6"
                            y1="0"
                            y2="4"
                          />
                          <line
                            x1="13"
                            x2="13"
                            y1="0"
                            y2="4"
                          />
                        </g>
                      </svg>
                    }
                    clearIcon={
                      <svg
                        height="19"
                        viewBox="0 0 19 19"
                        width="19"
                        xmlns="http://www.w3.org/2000/svg"
                      >
                        <g
                          stroke="black"
                          strokeWidth="2"
                        >
                          <line
                            x1="4"
                            x2="15"
                            y1="4"
                            y2="15"
                          />
                          <line
                            x1="15"
                            x2="4"
                            y1="4"
                            y2="15"
                          />
                        </g>
                      </svg>
                    }
                    isOpen={null}
                    onChange={[Function]}
                    returnValue="start"
                    value={2013-12-31T23:00:00.000Z}
                  />
                </Col>
              </Row>,
              "componentClass": "div",
              "md": 6,
              "xs": 12,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "bsClass": "row",
                "children": Array [
                  <Col
                    bsClass="col"
                    componentClass="div"
                    md={3}
                    xs={12}
                  >
                    <ControlLabel
                      bsClass="control-label"
                      srOnly={false}
                    >
                      Start Date
                    </ControlLabel>
                  </Col>,
                  <Col
                    bsClass="col"
                    componentClass="div"
                    md={9}
                    xs={12}
                  >
                    <DatePicker
                      calendarIcon={
                        <svg
                          height="19"
                          viewBox="0 0 19 19"
                          width="19"
                          xmlns="http://www.w3.org/2000/svg"
                        >
                          <g
                            stroke="black"
                            strokeWidth="2"
                          >
                            <rect
                              fill="none"
                              height="15"
                              width="15"
                              x="2"
                              y="2"
                            />
                            <line
                              x1="6"
                              x2="6"
                              y1="0"
                              y2="4"
                            />
                            <line
                              x1="13"
                              x2="13"
                              y1="0"
                              y2="4"
                            />
                          </g>
                        </svg>
                      }
                      clearIcon={
                        <svg
                          height="19"
                          viewBox="0 0 19 19"
                          width="19"
                          xmlns="http://www.w3.org/2000/svg"
                        >
                          <g
                            stroke="black"
                            strokeWidth="2"
                          >
                            <line
                              x1="4"
                              x2="15"
                              y1="4"
                              y2="15"
                            />
                            <line
                              x1="15"
                              x2="4"
                              y1="4"
                              y2="15"
                            />
                          </g>
                        </svg>
                      }
                      isOpen={null}
                      onChange={[Function]}
                      returnValue="start"
                      value={2013-12-31T23:00:00.000Z}
                    />
                  </Col>,
                ],
                "componentClass": "div",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "bsClass": "col",
                    "children": <ControlLabel
                      bsClass="control-label"
                      srOnly={false}
                    >
                      Start Date
                    </ControlLabel>,
                    "componentClass": "div",
                    "md": 3,
                    "xs": 12,
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "bsClass": "control-label",
                      "children": "Start Date",
                      "srOnly": false,
                    },
                    "ref": null,
                    "rendered": "Start Date",
                    "type": [Function],
                  },
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "bsClass": "col",
                    "children": <DatePicker
                      calendarIcon={
                        <svg
                          height="19"
                          viewBox="0 0 19 19"
                          width="19"
                          xmlns="http://www.w3.org/2000/svg"
                        >
                          <g
                            stroke="black"
                            strokeWidth="2"
                          >
                            <rect
                              fill="none"
                              height="15"
                              width="15"
                              x="2"
                              y="2"
                            />
                            <line
                              x1="6"
                              x2="6"
                              y1="0"
                              y2="4"
                            />
                            <line
                              x1="13"
                              x2="13"
                              y1="0"
                              y2="4"
                            />
                          </g>
                        </svg>
                      }
                      clearIcon={
                        <svg
                          height="19"
                          viewBox="0 0 19 19"
                          width="19"
                          xmlns="http://www.w3.org/2000/svg"
                        >
                          <g
                            stroke="black"
                            strokeWidth="2"
                          >
                            <line
                              x1="4"
                              x2="15"
                              y1="4"
                              y2="15"
                            />
                            <line
                              x1="15"
                              x2="4"
                              y1="4"
                              y2="15"
                            />
                          </g>
                        </svg>
                      }
                      isOpen={null}
                      onChange={[Function]}
                      returnValue="start"
                      value={2013-12-31T23:00:00.000Z}
                    />,
                    "componentClass": "div",
                    "md": 9,
                    "xs": 12,
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "calendarIcon": <svg
                        height="19"
                        viewBox="0 0 19 19"
                        width="19"
                        xmlns="http://www.w3.org/2000/svg"
                      >
                        <g
                          stroke="black"
                          strokeWidth="2"
                        >
                          <rect
                            fill="none"
                            height="15"
                            width="15"
                            x="2"
                            y="2"
                          />
                          <line
                            x1="6"
                            x2="6"
                            y1="0"
                            y2="4"
                          />
                          <line
                            x1="13"
                            x2="13"
                            y1="0"
                            y2="4"
                          />
                        </g>
                      </svg>,
                      "clearIcon": <svg
                        height="19"
                        viewBox="0 0 19 19"
                        width="19"
                        xmlns="http://www.w3.org/2000/svg"
                      >
                        <g
                          stroke="black"
                          strokeWidth="2"
                        >
                          <line
                            x1="4"
                            x2="15"
                            y1="4"
                            y2="15"
                          />
                          <line
                            x1="15"
                            x2="4"
                            y1="4"
                            y2="15"
                          />
                        </g>
                      </svg>,
                      "isOpen": null,
                      "onChange": [Function],
                      "returnValue": "start",
                      "value": 2013-12-31T23:00:00.000Z,
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                  "type": [Function],
                },
              ],
              "type": [Function],
            },
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "bsClass": "col",
              "children": <Row
                bsClass="row"
                componentClass="div"
              >
                <Col
                  bsClass="col"
                  componentClass="div"
                  md={3}
                  xs={12}
                >
                  <ControlLabel
                    bsClass="control-label"
                    srOnly={false}
                  >
                    End Date
                  </ControlLabel>
                </Col>
                <Col
                  bsClass="col"
                  componentClass="div"
                  md={9}
                  xs={12}
                >
                  <DatePicker
                    calendarIcon={
                      <svg
                        height="19"
                        viewBox="0 0 19 19"
                        width="19"
                        xmlns="http://www.w3.org/2000/svg"
                      >
                        <g
                          stroke="black"
                          strokeWidth="2"
                        >
                          <rect
                            fill="none"
                            height="15"
                            width="15"
                            x="2"
                            y="2"
                          />
                          <line
                            x1="6"
                            x2="6"
                            y1="0"
                            y2="4"
                          />
                          <line
                            x1="13"
                            x2="13"
                            y1="0"
                            y2="4"
                          />
                        </g>
                      </svg>
                    }
                    clearIcon={
                      <svg
                        height="19"
                        viewBox="0 0 19 19"
                        width="19"
                        xmlns="http://www.w3.org/2000/svg"
                      >
                        <g
                          stroke="black"
                          strokeWidth="2"
                        >
                          <line
                            x1="4"
                            x2="15"
                            y1="4"
                            y2="15"
                          />
                          <line
                            x1="15"
                            x2="4"
                            y1="4"
                            y2="15"
                          />
                        </g>
                      </svg>
                    }
                    isOpen={null}
                    onChange={[Function]}
                    returnValue="start"
                    value={2013-12-31T23:00:00.000Z}
                  />
                </Col>
              </Row>,
              "componentClass": "div",
              "md": 6,
              "xs": 12,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "bsClass": "row",
                "children": Array [
                  <Col
                    bsClass="col"
                    componentClass="div"
                    md={3}
                    xs={12}
                  >
                    <ControlLabel
                      bsClass="control-label"
                      srOnly={false}
                    >
                      End Date
                    </ControlLabel>
                  </Col>,
                  <Col
                    bsClass="col"
                    componentClass="div"
                    md={9}
                    xs={12}
                  >
                    <DatePicker
                      calendarIcon={
                        <svg
                          height="19"
                          viewBox="0 0 19 19"
                          width="19"
                          xmlns="http://www.w3.org/2000/svg"
                        >
                          <g
                            stroke="black"
                            strokeWidth="2"
                          >
                            <rect
                              fill="none"
                              height="15"
                              width="15"
                              x="2"
                              y="2"
                            />
                            <line
                              x1="6"
                              x2="6"
                              y1="0"
                              y2="4"
                            />
                            <line
                              x1="13"
                              x2="13"
                              y1="0"
                              y2="4"
                            />
                          </g>
                        </svg>
                      }
                      clearIcon={
                        <svg
                          height="19"
                          viewBox="0 0 19 19"
                          width="19"
                          xmlns="http://www.w3.org/2000/svg"
                        >
                          <g
                            stroke="black"
                            strokeWidth="2"
                          >
                            <line
                              x1="4"
                              x2="15"
                              y1="4"
                              y2="15"
                            />
                            <line
                              x1="15"
                              x2="4"
                              y1="4"
                              y2="15"
                            />
                          </g>
                        </svg>
                      }
                      isOpen={null}
                      onChange={[Function]}
                      returnValue="start"
                      value={2013-12-31T23:00:00.000Z}
                    />
                  </Col>,
                ],
                "componentClass": "div",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "bsClass": "col",
                    "children": <ControlLabel
                      bsClass="control-label"
                      srOnly={false}
                    >
                      End Date
                    </ControlLabel>,
                    "componentClass": "div",
                    "md": 3,
                    "xs": 12,
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "bsClass": "control-label",
                      "children": "End Date",
                      "srOnly": false,
                    },
                    "ref": null,
                    "rendered": "End Date",
                    "type": [Function],
                  },
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "bsClass": "col",
                    "children": <DatePicker
                      calendarIcon={
                        <svg
                          height="19"
                          viewBox="0 0 19 19"
                          width="19"
                          xmlns="http://www.w3.org/2000/svg"
                        >
                          <g
                            stroke="black"
                            strokeWidth="2"
                          >
                            <rect
                              fill="none"
                              height="15"
                              width="15"
                              x="2"
                              y="2"
                            />
                            <line
                              x1="6"
                              x2="6"
                              y1="0"
                              y2="4"
                            />
                            <line
                              x1="13"
                              x2="13"
                              y1="0"
                              y2="4"
                            />
                          </g>
                        </svg>
                      }
                      clearIcon={
                        <svg
                          height="19"
                          viewBox="0 0 19 19"
                          width="19"
                          xmlns="http://www.w3.org/2000/svg"
                        >
                          <g
                            stroke="black"
                            strokeWidth="2"
                          >
                            <line
                              x1="4"
                              x2="15"
                              y1="4"
                              y2="15"
                            />
                            <line
                              x1="15"
                              x2="4"
                              y1="4"
                              y2="15"
                            />
                          </g>
                        </svg>
                      }
                      isOpen={null}
                      onChange={[Function]}
                      returnValue="start"
                      value={2013-12-31T23:00:00.000Z}
                    />,
                    "componentClass": "div",
                    "md": 9,
                    "xs": 12,
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "calendarIcon": <svg
                        height="19"
                        viewBox="0 0 19 19"
                        width="19"
                        xmlns="http://www.w3.org/2000/svg"
                      >
                        <g
                          stroke="black"
                          strokeWidth="2"
                        >
                          <rect
                            fill="none"
                            height="15"
                            width="15"
                            x="2"
                            y="2"
                          />
                          <line
                            x1="6"
                            x2="6"
                            y1="0"
                            y2="4"
                          />
                          <line
                            x1="13"
                            x2="13"
                            y1="0"
                            y2="4"
                          />
                        </g>
                      </svg>,
                      "clearIcon": <svg
                        height="19"
                        viewBox="0 0 19 19"
                        width="19"
                        xmlns="http://www.w3.org/2000/svg"
                      >
                        <g
                          stroke="black"
                          strokeWidth="2"
                        >
                          <line
                            x1="4"
                            x2="15"
                            y1="4"
                            y2="15"
                          />
                          <line
                            x1="15"
                            x2="4"
                            y1="4"
                            y2="15"
                          />
                        </g>
                      </svg>,
                      "isOpen": null,
                      "onChange": [Function],
                      "returnValue": "start",
                      "value": 2013-12-31T23:00:00.000Z,
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                  "type": [Function],
                },
              ],
              "type": [Function],
            },
            "type": [Function],
          },
        ],
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "bsClass": "row",
          "children": <Col
            bsClass="col"
            componentClass="div"
            md={12}
            xs={12}
          >
            <Validator
              errorMessage="Start Date should be before or equal to End Date. Please check"
              max={2013-12-31T23:00:00.000Z}
              min={2013-12-31T23:00:00.000Z}
            />
          </Col>,
          "componentClass": "div",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "bsClass": "col",
            "children": <Validator
              errorMessage="Start Date should be before or equal to End Date. Please check"
              max={2013-12-31T23:00:00.000Z}
              min={2013-12-31T23:00:00.000Z}
            />,
            "componentClass": "div",
            "md": 12,
            "xs": 12,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "errorMessage": "Start Date should be before or equal to End Date. Please check",
              "max": 2013-12-31T23:00:00.000Z,
              "min": 2013-12-31T23:00:00.000Z,
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          "type": [Function],
        },
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "bsClass": "row",
          "children": Array [
            <Col
              bsClass="col"
              componentClass="div"
              md={6}
              xs={12}
            >
              <Row
                bsClass="row"
                componentClass="div"
              >
                <Col
                  bsClass="col"
                  componentClass="div"
                  md={3}
                  xs={12}
                >
                  <ControlLabel
                    bsClass="control-label"
                    srOnly={false}
                  >
                    Set Minimun
                  </ControlLabel>
                </Col>
                <Col
                  bsClass="col"
                  componentClass="div"
                  md={9}
                  xs={12}
                >
                  <FormControlWithDelay
                    onChange={[Function]}
                    placeholder="Enter min"
                    value={10}
                  />
                </Col>
              </Row>
            </Col>,
            <Col
              bsClass="col"
              componentClass="div"
              md={6}
              xs={12}
            >
              <Row
                bsClass="row"
                componentClass="div"
              >
                <Col
                  bsClass="col"
                  componentClass="div"
                  md={3}
                  xs={12}
                >
                  <ControlLabel
                    bsClass="control-label"
                    srOnly={false}
                  >
                    Set Maximun
                  </ControlLabel>
                </Col>
                <Col
                  bsClass="col"
                  componentClass="div"
                  md={9}
                  xs={12}
                >
                  <FormControlWithDelay
                    onChange={[Function]}
                    placeholder="Enter max"
                    value={3}
                  />
                </Col>
              </Row>
            </Col>,
            <Col
              bsClass="col"
              componentClass="div"
              md={12}
              xs={12}
            >
              <Validator
                errorMessage="Minimum value should be less than or equals to Maximum value. Please check"
                max={3}
                min={10}
              />
            </Col>,
          ],
          "componentClass": "div",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "bsClass": "col",
              "children": <Row
                bsClass="row"
                componentClass="div"
              >
                <Col
                  bsClass="col"
                  componentClass="div"
                  md={3}
                  xs={12}
                >
                  <ControlLabel
                    bsClass="control-label"
                    srOnly={false}
                  >
                    Set Minimun
                  </ControlLabel>
                </Col>
                <Col
                  bsClass="col"
                  componentClass="div"
                  md={9}
                  xs={12}
                >
                  <FormControlWithDelay
                    onChange={[Function]}
                    placeholder="Enter min"
                    value={10}
                  />
                </Col>
              </Row>,
              "componentClass": "div",
              "md": 6,
              "xs": 12,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "bsClass": "row",
                "children": Array [
                  <Col
                    bsClass="col"
                    componentClass="div"
                    md={3}
                    xs={12}
                  >
                    <ControlLabel
                      bsClass="control-label"
                      srOnly={false}
                    >
                      Set Minimun
                    </ControlLabel>
                  </Col>,
                  <Col
                    bsClass="col"
                    componentClass="div"
                    md={9}
                    xs={12}
                  >
                    <FormControlWithDelay
                      onChange={[Function]}
                      placeholder="Enter min"
                      value={10}
                    />
                  </Col>,
                ],
                "componentClass": "div",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "bsClass": "col",
                    "children": <ControlLabel
                      bsClass="control-label"
                      srOnly={false}
                    >
                      Set Minimun
                    </ControlLabel>,
                    "componentClass": "div",
                    "md": 3,
                    "xs": 12,
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "bsClass": "control-label",
                      "children": "Set Minimun",
                      "srOnly": false,
                    },
                    "ref": null,
                    "rendered": "Set Minimun",
                    "type": [Function],
                  },
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "bsClass": "col",
                    "children": <FormControlWithDelay
                      onChange={[Function]}
                      placeholder="Enter min"
                      value={10}
                    />,
                    "componentClass": "div",
                    "md": 9,
                    "xs": 12,
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "onChange": [Function],
                      "placeholder": "Enter min",
                      "value": 10,
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                  "type": [Function],
                },
              ],
              "type": [Function],
            },
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "bsClass": "col",
              "children": <Row
                bsClass="row"
                componentClass="div"
              >
                <Col
                  bsClass="col"
                  componentClass="div"
                  md={3}
                  xs={12}
                >
                  <ControlLabel
                    bsClass="control-label"
                    srOnly={false}
                  >
                    Set Maximun
                  </ControlLabel>
                </Col>
                <Col
                  bsClass="col"
                  componentClass="div"
                  md={9}
                  xs={12}
                >
                  <FormControlWithDelay
                    onChange={[Function]}
                    placeholder="Enter max"
                    value={3}
                  />
                </Col>
              </Row>,
              "componentClass": "div",
              "md": 6,
              "xs": 12,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "bsClass": "row",
                "children": Array [
                  <Col
                    bsClass="col"
                    componentClass="div"
                    md={3}
                    xs={12}
                  >
                    <ControlLabel
                      bsClass="control-label"
                      srOnly={false}
                    >
                      Set Maximun
                    </ControlLabel>
                  </Col>,
                  <Col
                    bsClass="col"
                    componentClass="div"
                    md={9}
                    xs={12}
                  >
                    <FormControlWithDelay
                      onChange={[Function]}
                      placeholder="Enter max"
                      value={3}
                    />
                  </Col>,
                ],
                "componentClass": "div",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "bsClass": "col",
                    "children": <ControlLabel
                      bsClass="control-label"
                      srOnly={false}
                    >
                      Set Maximun
                    </ControlLabel>,
                    "componentClass": "div",
                    "md": 3,
                    "xs": 12,
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "bsClass": "control-label",
                      "children": "Set Maximun",
                      "srOnly": false,
                    },
                    "ref": null,
                    "rendered": "Set Maximun",
                    "type": [Function],
                  },
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "bsClass": "col",
                    "children": <FormControlWithDelay
                      onChange={[Function]}
                      placeholder="Enter max"
                      value={3}
                    />,
                    "componentClass": "div",
                    "md": 9,
                    "xs": 12,
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "onChange": [Function],
                      "placeholder": "Enter max",
                      "value": 3,
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                  "type": [Function],
                },
              ],
              "type": [Function],
            },
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "bsClass": "col",
              "children": <Validator
                errorMessage="Minimum value should be less than or equals to Maximum value. Please check"
                max={3}
                min={10}
              />,
              "componentClass": "div",
              "md": 12,
              "xs": 12,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "errorMessage": "Minimum value should be less than or equals to Maximum value. Please check",
                "max": 3,
                "min": 10,
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            "type": [Function],
          },
        ],
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "bsClass": "row",
          "children": <Col
            bsClass="col"
            componentClass="div"
            md={12}
            xs={12}
          >
            <InstrumentSelection
              instruments={Array []}
              onChange={[Function]}
            />
          </Col>,
          "componentClass": "div",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "bsClass": "col",
            "children": <InstrumentSelection
              instruments={Array []}
              onChange={[Function]}
            />,
            "componentClass": "div",
            "md": 12,
            "xs": 12,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "instruments": Array [],
              "onChange": [Function],
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          "type": [Function],
        },
        "type": [Function],
      },
    ],
    "type": Symbol(react.fragment),
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "children": Array [
          <Row
            bsClass="row"
            componentClass="div"
          >
            <Connect(LoadingIndicator) />
          </Row>,
          <Row
            bsClass="row"
            componentClass="div"
          >
            <Col
              bsClass="col"
              componentClass="div"
              md={6}
              xs={12}
            >
              <Row
                bsClass="row"
                componentClass="div"
              >
                <Col
                  bsClass="col"
                  componentClass="div"
                  md={3}
                  xs={12}
                >
                  <ControlLabel
                    bsClass="control-label"
                    srOnly={false}
                  >
                    Start Date
                  </ControlLabel>
                </Col>
                <Col
                  bsClass="col"
                  componentClass="div"
                  md={9}
                  xs={12}
                >
                  <DatePicker
                    calendarIcon={
                      <svg
                        height="19"
                        viewBox="0 0 19 19"
                        width="19"
                        xmlns="http://www.w3.org/2000/svg"
                      >
                        <g
                          stroke="black"
                          strokeWidth="2"
                        >
                          <rect
                            fill="none"
                            height="15"
                            width="15"
                            x="2"
                            y="2"
                          />
                          <line
                            x1="6"
                            x2="6"
                            y1="0"
                            y2="4"
                          />
                          <line
                            x1="13"
                            x2="13"
                            y1="0"
                            y2="4"
                          />
                        </g>
                      </svg>
                    }
                    clearIcon={
                      <svg
                        height="19"
                        viewBox="0 0 19 19"
                        width="19"
                        xmlns="http://www.w3.org/2000/svg"
                      >
                        <g
                          stroke="black"
                          strokeWidth="2"
                        >
                          <line
                            x1="4"
                            x2="15"
                            y1="4"
                            y2="15"
                          />
                          <line
                            x1="15"
                            x2="4"
                            y1="4"
                            y2="15"
                          />
                        </g>
                      </svg>
                    }
                    isOpen={null}
                    onChange={[Function]}
                    returnValue="start"
                    value={2013-12-31T23:00:00.000Z}
                  />
                </Col>
              </Row>
            </Col>
            <Col
              bsClass="col"
              componentClass="div"
              md={6}
              xs={12}
            >
              <Row
                bsClass="row"
                componentClass="div"
              >
                <Col
                  bsClass="col"
                  componentClass="div"
                  md={3}
                  xs={12}
                >
                  <ControlLabel
                    bsClass="control-label"
                    srOnly={false}
                  >
                    End Date
                  </ControlLabel>
                </Col>
                <Col
                  bsClass="col"
                  componentClass="div"
                  md={9}
                  xs={12}
                >
                  <DatePicker
                    calendarIcon={
                      <svg
                        height="19"
                        viewBox="0 0 19 19"
                        width="19"
                        xmlns="http://www.w3.org/2000/svg"
                      >
                        <g
                          stroke="black"
                          strokeWidth="2"
                        >
                          <rect
                            fill="none"
                            height="15"
                            width="15"
                            x="2"
                            y="2"
                          />
                          <line
                            x1="6"
                            x2="6"
                            y1="0"
                            y2="4"
                          />
                          <line
                            x1="13"
                            x2="13"
                            y1="0"
                            y2="4"
                          />
                        </g>
                      </svg>
                    }
                    clearIcon={
                      <svg
                        height="19"
                        viewBox="0 0 19 19"
                        width="19"
                        xmlns="http://www.w3.org/2000/svg"
                      >
                        <g
                          stroke="black"
                          strokeWidth="2"
                        >
                          <line
                            x1="4"
                            x2="15"
                            y1="4"
                            y2="15"
                          />
                          <line
                            x1="15"
                            x2="4"
                            y1="4"
                            y2="15"
                          />
                        </g>
                      </svg>
                    }
                    isOpen={null}
                    onChange={[Function]}
                    returnValue="start"
                    value={2013-12-31T23:00:00.000Z}
                  />
                </Col>
              </Row>
            </Col>
          </Row>,
          <Row
            bsClass="row"
            componentClass="div"
          >
            <Col
              bsClass="col"
              componentClass="div"
              md={12}
              xs={12}
            >
              <Validator
                errorMessage="Start Date should be before or equal to End Date. Please check"
                max={2013-12-31T23:00:00.000Z}
                min={2013-12-31T23:00:00.000Z}
              />
            </Col>
          </Row>,
          <Row
            bsClass="row"
            componentClass="div"
          >
            <Col
              bsClass="col"
              componentClass="div"
              md={6}
              xs={12}
            >
              <Row
                bsClass="row"
                componentClass="div"
              >
                <Col
                  bsClass="col"
                  componentClass="div"
                  md={3}
                  xs={12}
                >
                  <ControlLabel
                    bsClass="control-label"
                    srOnly={false}
                  >
                    Set Minimun
                  </ControlLabel>
                </Col>
                <Col
                  bsClass="col"
                  componentClass="div"
                  md={9}
                  xs={12}
                >
                  <FormControlWithDelay
                    onChange={[Function]}
                    placeholder="Enter min"
                    value={10}
                  />
                </Col>
              </Row>
            </Col>
            <Col
              bsClass="col"
              componentClass="div"
              md={6}
              xs={12}
            >
              <Row
                bsClass="row"
                componentClass="div"
              >
                <Col
                  bsClass="col"
                  componentClass="div"
                  md={3}
                  xs={12}
                >
                  <ControlLabel
                    bsClass="control-label"
                    srOnly={false}
                  >
                    Set Maximun
                  </ControlLabel>
                </Col>
                <Col
                  bsClass="col"
                  componentClass="div"
                  md={9}
                  xs={12}
                >
                  <FormControlWithDelay
                    onChange={[Function]}
                    placeholder="Enter max"
                    value={3}
                  />
                </Col>
              </Row>
            </Col>
            <Col
              bsClass="col"
              componentClass="div"
              md={12}
              xs={12}
            >
              <Validator
                errorMessage="Minimum value should be less than or equals to Maximum value. Please check"
                max={3}
                min={10}
              />
            </Col>
          </Row>,
          <Row
            bsClass="row"
            componentClass="div"
          >
            <Col
              bsClass="col"
              componentClass="div"
              md={12}
              xs={12}
            >
              <InstrumentSelection
                instruments={Array []}
                onChange={[Function]}
              />
            </Col>
          </Row>,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "bsClass": "row",
            "children": <Connect(LoadingIndicator) />,
            "componentClass": "div",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {},
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "bsClass": "row",
            "children": Array [
              <Col
                bsClass="col"
                componentClass="div"
                md={6}
                xs={12}
              >
                <Row
                  bsClass="row"
                  componentClass="div"
                >
                  <Col
                    bsClass="col"
                    componentClass="div"
                    md={3}
                    xs={12}
                  >
                    <ControlLabel
                      bsClass="control-label"
                      srOnly={false}
                    >
                      Start Date
                    </ControlLabel>
                  </Col>
                  <Col
                    bsClass="col"
                    componentClass="div"
                    md={9}
                    xs={12}
                  >
                    <DatePicker
                      calendarIcon={
                        <svg
                          height="19"
                          viewBox="0 0 19 19"
                          width="19"
                          xmlns="http://www.w3.org/2000/svg"
                        >
                          <g
                            stroke="black"
                            strokeWidth="2"
                          >
                            <rect
                              fill="none"
                              height="15"
                              width="15"
                              x="2"
                              y="2"
                            />
                            <line
                              x1="6"
                              x2="6"
                              y1="0"
                              y2="4"
                            />
                            <line
                              x1="13"
                              x2="13"
                              y1="0"
                              y2="4"
                            />
                          </g>
                        </svg>
                      }
                      clearIcon={
                        <svg
                          height="19"
                          viewBox="0 0 19 19"
                          width="19"
                          xmlns="http://www.w3.org/2000/svg"
                        >
                          <g
                            stroke="black"
                            strokeWidth="2"
                          >
                            <line
                              x1="4"
                              x2="15"
                              y1="4"
                              y2="15"
                            />
                            <line
                              x1="15"
                              x2="4"
                              y1="4"
                              y2="15"
                            />
                          </g>
                        </svg>
                      }
                      isOpen={null}
                      onChange={[Function]}
                      returnValue="start"
                      value={2013-12-31T23:00:00.000Z}
                    />
                  </Col>
                </Row>
              </Col>,
              <Col
                bsClass="col"
                componentClass="div"
                md={6}
                xs={12}
              >
                <Row
                  bsClass="row"
                  componentClass="div"
                >
                  <Col
                    bsClass="col"
                    componentClass="div"
                    md={3}
                    xs={12}
                  >
                    <ControlLabel
                      bsClass="control-label"
                      srOnly={false}
                    >
                      End Date
                    </ControlLabel>
                  </Col>
                  <Col
                    bsClass="col"
                    componentClass="div"
                    md={9}
                    xs={12}
                  >
                    <DatePicker
                      calendarIcon={
                        <svg
                          height="19"
                          viewBox="0 0 19 19"
                          width="19"
                          xmlns="http://www.w3.org/2000/svg"
                        >
                          <g
                            stroke="black"
                            strokeWidth="2"
                          >
                            <rect
                              fill="none"
                              height="15"
                              width="15"
                              x="2"
                              y="2"
                            />
                            <line
                              x1="6"
                              x2="6"
                              y1="0"
                              y2="4"
                            />
                            <line
                              x1="13"
                              x2="13"
                              y1="0"
                              y2="4"
                            />
                          </g>
                        </svg>
                      }
                      clearIcon={
                        <svg
                          height="19"
                          viewBox="0 0 19 19"
                          width="19"
                          xmlns="http://www.w3.org/2000/svg"
                        >
                          <g
                            stroke="black"
                            strokeWidth="2"
                          >
                            <line
                              x1="4"
                              x2="15"
                              y1="4"
                              y2="15"
                            />
                            <line
                              x1="15"
                              x2="4"
                              y1="4"
                              y2="15"
                            />
                          </g>
                        </svg>
                      }
                      isOpen={null}
                      onChange={[Function]}
                      returnValue="start"
                      value={2013-12-31T23:00:00.000Z}
                    />
                  </Col>
                </Row>
              </Col>,
            ],
            "componentClass": "div",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "bsClass": "col",
                "children": <Row
                  bsClass="row"
                  componentClass="div"
                >
                  <Col
                    bsClass="col"
                    componentClass="div"
                    md={3}
                    xs={12}
                  >
                    <ControlLabel
                      bsClass="control-label"
                      srOnly={false}
                    >
                      Start Date
                    </ControlLabel>
                  </Col>
                  <Col
                    bsClass="col"
                    componentClass="div"
                    md={9}
                    xs={12}
                  >
                    <DatePicker
                      calendarIcon={
                        <svg
                          height="19"
                          viewBox="0 0 19 19"
                          width="19"
                          xmlns="http://www.w3.org/2000/svg"
                        >
                          <g
                            stroke="black"
                            strokeWidth="2"
                          >
                            <rect
                              fill="none"
                              height="15"
                              width="15"
                              x="2"
                              y="2"
                            />
                            <line
                              x1="6"
                              x2="6"
                              y1="0"
                              y2="4"
                            />
                            <line
                              x1="13"
                              x2="13"
                              y1="0"
                              y2="4"
                            />
                          </g>
                        </svg>
                      }
                      clearIcon={
                        <svg
                          height="19"
                          viewBox="0 0 19 19"
                          width="19"
                          xmlns="http://www.w3.org/2000/svg"
                        >
                          <g
                            stroke="black"
                            strokeWidth="2"
                          >
                            <line
                              x1="4"
                              x2="15"
                              y1="4"
                              y2="15"
                            />
                            <line
                              x1="15"
                              x2="4"
                              y1="4"
                              y2="15"
                            />
                          </g>
                        </svg>
                      }
                      isOpen={null}
                      onChange={[Function]}
                      returnValue="start"
                      value={2013-12-31T23:00:00.000Z}
                    />
                  </Col>
                </Row>,
                "componentClass": "div",
                "md": 6,
                "xs": 12,
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "bsClass": "row",
                  "children": Array [
                    <Col
                      bsClass="col"
                      componentClass="div"
                      md={3}
                      xs={12}
                    >
                      <ControlLabel
                        bsClass="control-label"
                        srOnly={false}
                      >
                        Start Date
                      </ControlLabel>
                    </Col>,
                    <Col
                      bsClass="col"
                      componentClass="div"
                      md={9}
                      xs={12}
                    >
                      <DatePicker
                        calendarIcon={
                          <svg
                            height="19"
                            viewBox="0 0 19 19"
                            width="19"
                            xmlns="http://www.w3.org/2000/svg"
                          >
                            <g
                              stroke="black"
                              strokeWidth="2"
                            >
                              <rect
                                fill="none"
                                height="15"
                                width="15"
                                x="2"
                                y="2"
                              />
                              <line
                                x1="6"
                                x2="6"
                                y1="0"
                                y2="4"
                              />
                              <line
                                x1="13"
                                x2="13"
                                y1="0"
                                y2="4"
                              />
                            </g>
                          </svg>
                        }
                        clearIcon={
                          <svg
                            height="19"
                            viewBox="0 0 19 19"
                            width="19"
                            xmlns="http://www.w3.org/2000/svg"
                          >
                            <g
                              stroke="black"
                              strokeWidth="2"
                            >
                              <line
                                x1="4"
                                x2="15"
                                y1="4"
                                y2="15"
                              />
                              <line
                                x1="15"
                                x2="4"
                                y1="4"
                                y2="15"
                              />
                            </g>
                          </svg>
                        }
                        isOpen={null}
                        onChange={[Function]}
                        returnValue="start"
                        value={2013-12-31T23:00:00.000Z}
                      />
                    </Col>,
                  ],
                  "componentClass": "div",
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "bsClass": "col",
                      "children": <ControlLabel
                        bsClass="control-label"
                        srOnly={false}
                      >
                        Start Date
                      </ControlLabel>,
                      "componentClass": "div",
                      "md": 3,
                      "xs": 12,
                    },
                    "ref": null,
                    "rendered": Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {
                        "bsClass": "control-label",
                        "children": "Start Date",
                        "srOnly": false,
                      },
                      "ref": null,
                      "rendered": "Start Date",
                      "type": [Function],
                    },
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "bsClass": "col",
                      "children": <DatePicker
                        calendarIcon={
                          <svg
                            height="19"
                            viewBox="0 0 19 19"
                            width="19"
                            xmlns="http://www.w3.org/2000/svg"
                          >
                            <g
                              stroke="black"
                              strokeWidth="2"
                            >
                              <rect
                                fill="none"
                                height="15"
                                width="15"
                                x="2"
                                y="2"
                              />
                              <line
                                x1="6"
                                x2="6"
                                y1="0"
                                y2="4"
                              />
                              <line
                                x1="13"
                                x2="13"
                                y1="0"
                                y2="4"
                              />
                            </g>
                          </svg>
                        }
                        clearIcon={
                          <svg
                            height="19"
                            viewBox="0 0 19 19"
                            width="19"
                            xmlns="http://www.w3.org/2000/svg"
                          >
                            <g
                              stroke="black"
                              strokeWidth="2"
                            >
                              <line
                                x1="4"
                                x2="15"
                                y1="4"
                                y2="15"
                              />
                              <line
                                x1="15"
                                x2="4"
                                y1="4"
                                y2="15"
                              />
                            </g>
                          </svg>
                        }
                        isOpen={null}
                        onChange={[Function]}
                        returnValue="start"
                        value={2013-12-31T23:00:00.000Z}
                      />,
                      "componentClass": "div",
                      "md": 9,
                      "xs": 12,
                    },
                    "ref": null,
                    "rendered": Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {
                        "calendarIcon": <svg
                          height="19"
                          viewBox="0 0 19 19"
                          width="19"
                          xmlns="http://www.w3.org/2000/svg"
                        >
                          <g
                            stroke="black"
                            strokeWidth="2"
                          >
                            <rect
                              fill="none"
                              height="15"
                              width="15"
                              x="2"
                              y="2"
                            />
                            <line
                              x1="6"
                              x2="6"
                              y1="0"
                              y2="4"
                            />
                            <line
                              x1="13"
                              x2="13"
                              y1="0"
                              y2="4"
                            />
                          </g>
                        </svg>,
                        "clearIcon": <svg
                          height="19"
                          viewBox="0 0 19 19"
                          width="19"
                          xmlns="http://www.w3.org/2000/svg"
                        >
                          <g
                            stroke="black"
                            strokeWidth="2"
                          >
                            <line
                              x1="4"
                              x2="15"
                              y1="4"
                              y2="15"
                            />
                            <line
                              x1="15"
                              x2="4"
                              y1="4"
                              y2="15"
                            />
                          </g>
                        </svg>,
                        "isOpen": null,
                        "onChange": [Function],
                        "returnValue": "start",
                        "value": 2013-12-31T23:00:00.000Z,
                      },
                      "ref": null,
                      "rendered": null,
                      "type": [Function],
                    },
                    "type": [Function],
                  },
                ],
                "type": [Function],
              },
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "bsClass": "col",
                "children": <Row
                  bsClass="row"
                  componentClass="div"
                >
                  <Col
                    bsClass="col"
                    componentClass="div"
                    md={3}
                    xs={12}
                  >
                    <ControlLabel
                      bsClass="control-label"
                      srOnly={false}
                    >
                      End Date
                    </ControlLabel>
                  </Col>
                  <Col
                    bsClass="col"
                    componentClass="div"
                    md={9}
                    xs={12}
                  >
                    <DatePicker
                      calendarIcon={
                        <svg
                          height="19"
                          viewBox="0 0 19 19"
                          width="19"
                          xmlns="http://www.w3.org/2000/svg"
                        >
                          <g
                            stroke="black"
                            strokeWidth="2"
                          >
                            <rect
                              fill="none"
                              height="15"
                              width="15"
                              x="2"
                              y="2"
                            />
                            <line
                              x1="6"
                              x2="6"
                              y1="0"
                              y2="4"
                            />
                            <line
                              x1="13"
                              x2="13"
                              y1="0"
                              y2="4"
                            />
                          </g>
                        </svg>
                      }
                      clearIcon={
                        <svg
                          height="19"
                          viewBox="0 0 19 19"
                          width="19"
                          xmlns="http://www.w3.org/2000/svg"
                        >
                          <g
                            stroke="black"
                            strokeWidth="2"
                          >
                            <line
                              x1="4"
                              x2="15"
                              y1="4"
                              y2="15"
                            />
                            <line
                              x1="15"
                              x2="4"
                              y1="4"
                              y2="15"
                            />
                          </g>
                        </svg>
                      }
                      isOpen={null}
                      onChange={[Function]}
                      returnValue="start"
                      value={2013-12-31T23:00:00.000Z}
                    />
                  </Col>
                </Row>,
                "componentClass": "div",
                "md": 6,
                "xs": 12,
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "bsClass": "row",
                  "children": Array [
                    <Col
                      bsClass="col"
                      componentClass="div"
                      md={3}
                      xs={12}
                    >
                      <ControlLabel
                        bsClass="control-label"
                        srOnly={false}
                      >
                        End Date
                      </ControlLabel>
                    </Col>,
                    <Col
                      bsClass="col"
                      componentClass="div"
                      md={9}
                      xs={12}
                    >
                      <DatePicker
                        calendarIcon={
                          <svg
                            height="19"
                            viewBox="0 0 19 19"
                            width="19"
                            xmlns="http://www.w3.org/2000/svg"
                          >
                            <g
                              stroke="black"
                              strokeWidth="2"
                            >
                              <rect
                                fill="none"
                                height="15"
                                width="15"
                                x="2"
                                y="2"
                              />
                              <line
                                x1="6"
                                x2="6"
                                y1="0"
                                y2="4"
                              />
                              <line
                                x1="13"
                                x2="13"
                                y1="0"
                                y2="4"
                              />
                            </g>
                          </svg>
                        }
                        clearIcon={
                          <svg
                            height="19"
                            viewBox="0 0 19 19"
                            width="19"
                            xmlns="http://www.w3.org/2000/svg"
                          >
                            <g
                              stroke="black"
                              strokeWidth="2"
                            >
                              <line
                                x1="4"
                                x2="15"
                                y1="4"
                                y2="15"
                              />
                              <line
                                x1="15"
                                x2="4"
                                y1="4"
                                y2="15"
                              />
                            </g>
                          </svg>
                        }
                        isOpen={null}
                        onChange={[Function]}
                        returnValue="start"
                        value={2013-12-31T23:00:00.000Z}
                      />
                    </Col>,
                  ],
                  "componentClass": "div",
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "bsClass": "col",
                      "children": <ControlLabel
                        bsClass="control-label"
                        srOnly={false}
                      >
                        End Date
                      </ControlLabel>,
                      "componentClass": "div",
                      "md": 3,
                      "xs": 12,
                    },
                    "ref": null,
                    "rendered": Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {
                        "bsClass": "control-label",
                        "children": "End Date",
                        "srOnly": false,
                      },
                      "ref": null,
                      "rendered": "End Date",
                      "type": [Function],
                    },
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "bsClass": "col",
                      "children": <DatePicker
                        calendarIcon={
                          <svg
                            height="19"
                            viewBox="0 0 19 19"
                            width="19"
                            xmlns="http://www.w3.org/2000/svg"
                          >
                            <g
                              stroke="black"
                              strokeWidth="2"
                            >
                              <rect
                                fill="none"
                                height="15"
                                width="15"
                                x="2"
                                y="2"
                              />
                              <line
                                x1="6"
                                x2="6"
                                y1="0"
                                y2="4"
                              />
                              <line
                                x1="13"
                                x2="13"
                                y1="0"
                                y2="4"
                              />
                            </g>
                          </svg>
                        }
                        clearIcon={
                          <svg
                            height="19"
                            viewBox="0 0 19 19"
                            width="19"
                            xmlns="http://www.w3.org/2000/svg"
                          >
                            <g
                              stroke="black"
                              strokeWidth="2"
                            >
                              <line
                                x1="4"
                                x2="15"
                                y1="4"
                                y2="15"
                              />
                              <line
                                x1="15"
                                x2="4"
                                y1="4"
                                y2="15"
                              />
                            </g>
                          </svg>
                        }
                        isOpen={null}
                        onChange={[Function]}
                        returnValue="start"
                        value={2013-12-31T23:00:00.000Z}
                      />,
                      "componentClass": "div",
                      "md": 9,
                      "xs": 12,
                    },
                    "ref": null,
                    "rendered": Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {
                        "calendarIcon": <svg
                          height="19"
                          viewBox="0 0 19 19"
                          width="19"
                          xmlns="http://www.w3.org/2000/svg"
                        >
                          <g
                            stroke="black"
                            strokeWidth="2"
                          >
                            <rect
                              fill="none"
                              height="15"
                              width="15"
                              x="2"
                              y="2"
                            />
                            <line
                              x1="6"
                              x2="6"
                              y1="0"
                              y2="4"
                            />
                            <line
                              x1="13"
                              x2="13"
                              y1="0"
                              y2="4"
                            />
                          </g>
                        </svg>,
                        "clearIcon": <svg
                          height="19"
                          viewBox="0 0 19 19"
                          width="19"
                          xmlns="http://www.w3.org/2000/svg"
                        >
                          <g
                            stroke="black"
                            strokeWidth="2"
                          >
                            <line
                              x1="4"
                              x2="15"
                              y1="4"
                              y2="15"
                            />
                            <line
                              x1="15"
                              x2="4"
                              y1="4"
                              y2="15"
                            />
                          </g>
                        </svg>,
                        "isOpen": null,
                        "onChange": [Function],
                        "returnValue": "start",
                        "value": 2013-12-31T23:00:00.000Z,
                      },
                      "ref": null,
                      "rendered": null,
                      "type": [Function],
                    },
                    "type": [Function],
                  },
                ],
                "type": [Function],
              },
              "type": [Function],
            },
          ],
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "bsClass": "row",
            "children": <Col
              bsClass="col"
              componentClass="div"
              md={12}
              xs={12}
            >
              <Validator
                errorMessage="Start Date should be before or equal to End Date. Please check"
                max={2013-12-31T23:00:00.000Z}
                min={2013-12-31T23:00:00.000Z}
              />
            </Col>,
            "componentClass": "div",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "bsClass": "col",
              "children": <Validator
                errorMessage="Start Date should be before or equal to End Date. Please check"
                max={2013-12-31T23:00:00.000Z}
                min={2013-12-31T23:00:00.000Z}
              />,
              "componentClass": "div",
              "md": 12,
              "xs": 12,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "errorMessage": "Start Date should be before or equal to End Date. Please check",
                "max": 2013-12-31T23:00:00.000Z,
                "min": 2013-12-31T23:00:00.000Z,
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            "type": [Function],
          },
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "bsClass": "row",
            "children": Array [
              <Col
                bsClass="col"
                componentClass="div"
                md={6}
                xs={12}
              >
                <Row
                  bsClass="row"
                  componentClass="div"
                >
                  <Col
                    bsClass="col"
                    componentClass="div"
                    md={3}
                    xs={12}
                  >
                    <ControlLabel
                      bsClass="control-label"
                      srOnly={false}
                    >
                      Set Minimun
                    </ControlLabel>
                  </Col>
                  <Col
                    bsClass="col"
                    componentClass="div"
                    md={9}
                    xs={12}
                  >
                    <FormControlWithDelay
                      onChange={[Function]}
                      placeholder="Enter min"
                      value={10}
                    />
                  </Col>
                </Row>
              </Col>,
              <Col
                bsClass="col"
                componentClass="div"
                md={6}
                xs={12}
              >
                <Row
                  bsClass="row"
                  componentClass="div"
                >
                  <Col
                    bsClass="col"
                    componentClass="div"
                    md={3}
                    xs={12}
                  >
                    <ControlLabel
                      bsClass="control-label"
                      srOnly={false}
                    >
                      Set Maximun
                    </ControlLabel>
                  </Col>
                  <Col
                    bsClass="col"
                    componentClass="div"
                    md={9}
                    xs={12}
                  >
                    <FormControlWithDelay
                      onChange={[Function]}
                      placeholder="Enter max"
                      value={3}
                    />
                  </Col>
                </Row>
              </Col>,
              <Col
                bsClass="col"
                componentClass="div"
                md={12}
                xs={12}
              >
                <Validator
                  errorMessage="Minimum value should be less than or equals to Maximum value. Please check"
                  max={3}
                  min={10}
                />
              </Col>,
            ],
            "componentClass": "div",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "bsClass": "col",
                "children": <Row
                  bsClass="row"
                  componentClass="div"
                >
                  <Col
                    bsClass="col"
                    componentClass="div"
                    md={3}
                    xs={12}
                  >
                    <ControlLabel
                      bsClass="control-label"
                      srOnly={false}
                    >
                      Set Minimun
                    </ControlLabel>
                  </Col>
                  <Col
                    bsClass="col"
                    componentClass="div"
                    md={9}
                    xs={12}
                  >
                    <FormControlWithDelay
                      onChange={[Function]}
                      placeholder="Enter min"
                      value={10}
                    />
                  </Col>
                </Row>,
                "componentClass": "div",
                "md": 6,
                "xs": 12,
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "bsClass": "row",
                  "children": Array [
                    <Col
                      bsClass="col"
                      componentClass="div"
                      md={3}
                      xs={12}
                    >
                      <ControlLabel
                        bsClass="control-label"
                        srOnly={false}
                      >
                        Set Minimun
                      </ControlLabel>
                    </Col>,
                    <Col
                      bsClass="col"
                      componentClass="div"
                      md={9}
                      xs={12}
                    >
                      <FormControlWithDelay
                        onChange={[Function]}
                        placeholder="Enter min"
                        value={10}
                      />
                    </Col>,
                  ],
                  "componentClass": "div",
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "bsClass": "col",
                      "children": <ControlLabel
                        bsClass="control-label"
                        srOnly={false}
                      >
                        Set Minimun
                      </ControlLabel>,
                      "componentClass": "div",
                      "md": 3,
                      "xs": 12,
                    },
                    "ref": null,
                    "rendered": Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {
                        "bsClass": "control-label",
                        "children": "Set Minimun",
                        "srOnly": false,
                      },
                      "ref": null,
                      "rendered": "Set Minimun",
                      "type": [Function],
                    },
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "bsClass": "col",
                      "children": <FormControlWithDelay
                        onChange={[Function]}
                        placeholder="Enter min"
                        value={10}
                      />,
                      "componentClass": "div",
                      "md": 9,
                      "xs": 12,
                    },
                    "ref": null,
                    "rendered": Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {
                        "onChange": [Function],
                        "placeholder": "Enter min",
                        "value": 10,
                      },
                      "ref": null,
                      "rendered": null,
                      "type": [Function],
                    },
                    "type": [Function],
                  },
                ],
                "type": [Function],
              },
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "bsClass": "col",
                "children": <Row
                  bsClass="row"
                  componentClass="div"
                >
                  <Col
                    bsClass="col"
                    componentClass="div"
                    md={3}
                    xs={12}
                  >
                    <ControlLabel
                      bsClass="control-label"
                      srOnly={false}
                    >
                      Set Maximun
                    </ControlLabel>
                  </Col>
                  <Col
                    bsClass="col"
                    componentClass="div"
                    md={9}
                    xs={12}
                  >
                    <FormControlWithDelay
                      onChange={[Function]}
                      placeholder="Enter max"
                      value={3}
                    />
                  </Col>
                </Row>,
                "componentClass": "div",
                "md": 6,
                "xs": 12,
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "bsClass": "row",
                  "children": Array [
                    <Col
                      bsClass="col"
                      componentClass="div"
                      md={3}
                      xs={12}
                    >
                      <ControlLabel
                        bsClass="control-label"
                        srOnly={false}
                      >
                        Set Maximun
                      </ControlLabel>
                    </Col>,
                    <Col
                      bsClass="col"
                      componentClass="div"
                      md={9}
                      xs={12}
                    >
                      <FormControlWithDelay
                        onChange={[Function]}
                        placeholder="Enter max"
                        value={3}
                      />
                    </Col>,
                  ],
                  "componentClass": "div",
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "bsClass": "col",
                      "children": <ControlLabel
                        bsClass="control-label"
                        srOnly={false}
                      >
                        Set Maximun
                      </ControlLabel>,
                      "componentClass": "div",
                      "md": 3,
                      "xs": 12,
                    },
                    "ref": null,
                    "rendered": Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {
                        "bsClass": "control-label",
                        "children": "Set Maximun",
                        "srOnly": false,
                      },
                      "ref": null,
                      "rendered": "Set Maximun",
                      "type": [Function],
                    },
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "bsClass": "col",
                      "children": <FormControlWithDelay
                        onChange={[Function]}
                        placeholder="Enter max"
                        value={3}
                      />,
                      "componentClass": "div",
                      "md": 9,
                      "xs": 12,
                    },
                    "ref": null,
                    "rendered": Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {
                        "onChange": [Function],
                        "placeholder": "Enter max",
                        "value": 3,
                      },
                      "ref": null,
                      "rendered": null,
                      "type": [Function],
                    },
                    "type": [Function],
                  },
                ],
                "type": [Function],
              },
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "bsClass": "col",
                "children": <Validator
                  errorMessage="Minimum value should be less than or equals to Maximum value. Please check"
                  max={3}
                  min={10}
                />,
                "componentClass": "div",
                "md": 12,
                "xs": 12,
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "errorMessage": "Minimum value should be less than or equals to Maximum value. Please check",
                  "max": 3,
                  "min": 10,
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              "type": [Function],
            },
          ],
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "bsClass": "row",
            "children": <Col
              bsClass="col"
              componentClass="div"
              md={12}
              xs={12}
            >
              <InstrumentSelection
                instruments={Array []}
                onChange={[Function]}
              />
            </Col>,
            "componentClass": "div",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "bsClass": "col",
              "children": <InstrumentSelection
                instruments={Array []}
                onChange={[Function]}
              />,
              "componentClass": "div",
              "md": 12,
              "xs": 12,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "instruments": Array [],
                "onChange": [Function],
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            "type": [Function],
          },
          "type": [Function],
        },
      ],
      "type": Symbol(react.fragment),
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
